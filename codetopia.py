#GAME NAME : CODETOPIA
#CATEGORY  : Roguelike
#DEVELOPER : JEDIZR

#initialize
import msvcrt
import math
import os
import sys
import random
from array import *

#global variable
global Diff,Life,Angel,Name,item_list,chapter,mp,max_chapter,newshop,monster_list,posx,posy,Exp,Level,Kill,Damage,max_atk,max_hp,max_mp,max_def,max_acc,max_spd,boss_list,scene_mp,scenename_mp,blackstart,Gold,SGold,hero,stat,High_Score,o_score
Diff= 'NORMAL '
Life= '100    '
Angel='On     '
chapter=1
max_chapter=5
newshop=[]
posx=0
posy=0
Exp=0
Level=1
Kill=0
Damage=0
max_atk=0
max_hp=0
max_mp=0
max_def=0
max_acc=0
max_spd=0
High_Score=0
o_score=0

#name,cost,atk,spd,acc,def,hp,mp,type,amount
##100
item_list=[
    #start set
    ['None',0,0,0,0,0,0,0,0,0],
    ['Old Great Sword ',5,10,3,7,0,0,0,1,random.randint(0,4)],
    ['Old Dagger      ',5,5,7,5,0,0,0,1,random.randint(0,4)],
    ['Old Bow         ',5,7,3,9,0,0,0,1,random.randint(0,4)],
    ['Old Sword&Shield',5,7,5,6,1,0,0,1,random.randint(0,4)],
    
    #tier_c_swordsman_set    
    ['Rusty Sword', 5, 10, 3, 7, 0, 0, 0, 1,random.randint(0,4)],
    ['Leather Helmet', 5, 0, 0, 0, 3, 10, 0, 2,random.randint(0,4)],
    ['Leather Chest Plate', 10, 0, 0, 0, 7, 20, 0, 3,random.randint(0,4)],
    ['Leather Leggings', 7, 0, 0, 0, 5, 15, 0, 4,random.randint(0,4)],
    ['Leather Boots', 5, 0, 0, 0, 3, 10, 0, 5,random.randint(0,4)],

    #tier_b_swordsman_set   
    ['Iron Sword', 10, 12, 4, 8, 0, 0, 0, 1,random.randint(0,4)],
    ['Iron Helmet', 10, 0, 0, 0, 5, 10, 0, 2,random.randint(0,4)],
    ['Iron Chest Plate', 20, 0, 0, 0, 10, 20, 0, 3,random.randint(0,4)],
    ['Iron Leggings', 15, 0, 0, 0, 7, 15, 0, 4,random.randint(0,4)],
    ['Iron Boots', 10, 0, 0, 0, 5, 10, 0, 5,random.randint(0,4)],

    #tier_a_swordsman_set   
    ['Steel Sword', 20, 15, 5, 9, 0, 0, 0, 1,random.randint(0,4)],
    ['Steel Helmet', 20, 0, 0, 0, 8, 15, 0, 2,random.randint(0,4)],
    ['Steel Chest Plate', 40, 0, 0, 0, 15, 25, 0, 3,random.randint(0,4)],
    ['Steel Leggings', 25, 0, 0, 0, 12, 20, 0, 4,random.randint(0,4)],
    ['Steel Boots', 20, 0, 0, 0, 8, 15, 0, 5,random.randint(0,4)],

    #tier_s_swordsman_set   
    ['Diamond Sword', 50, 20, 6, 10, 0, 0, 0, 1,random.randint(0,4)],
    ['Diamond Helmet', 50, 0, 0, 0, 12, 20, 0, 2,random.randint(0,4)],
    ['Diamond Chest Plate', 100, 0, 0, 0, 20, 30, 0, 3,random.randint(0,4)],
    ['Diamond Leggings', 60, 0, 0, 0, 15, 25, 0, 4,random.randint(0,4)],
    ['Diamond Boots', 50, 0, 0, 0, 12, 20, 0, 5,random.randint(0,4)],

    #archer_set_c    
    ["Wooden Bow", 10, 5, 5, 7, 0, 0, 0, 1,random.randint(0,4)],
    ["Leather Cap", 5, 0, 0, 0, 2, 5, 0, 2,random.randint(0,4)],
    ["Leather Vest", 5, 0, 0, 0, 5, 10, 0, 3,random.randint(0,4)],
    ["Leather Pants", 5, 0, 0, 0, 3, 7, 0, 4,random.randint(0,4)],
    ["Leather Boots", 5, 0, 0, 0, 2, 5, 0, 5,random.randint(0,4)],

    #archer_set_b  
    ["Iron Bow", 25, 8, 7, 9, 0, 0, 0, 1,random.randint(0,4)],
    ["Iron Helmet", 15, 0, 0, 0, 5, 10, 0, 2,random.randint(0,4)],
    ["Iron Chestplate", 20, 0, 0, 0, 12, 25, 0, 3,random.randint(0,4)],
    ["Iron Leggings", 15, 0, 0, 0, 7, 15, 0, 4,random.randint(0,4)],
    ["Iron Boots", 10, 0, 0, 0, 5, 10, 0, 5,random.randint(0,4)],

    #archer_set_a  
    ["Diamond Bow", 75, 18, 10, 12, 0, 0, 0, 1,random.randint(0,4)],
    ["Diamond Helmet", 50, 0, 0, 0, 18, 35, 0, 2,random.randint(0,4)],
    ["Diamond Chestplate", 60, 0, 0, 0, 30, 50, 0, 3,random.randint(0,4)],
    ["Diamond Leggings", 50, 0, 0, 0, 22, 40, 0, 4,random.randint(0,4)],
    ["Diamond Boots", 40, 0, 0, 0, 18, 35, 0, 5,random.randint(0,4)],

    #archer_set_s  
    ["Golden Bow", 150, 25, 12, 15, 0, 0, 0, 1,random.randint(0,4)],
    ["Golden Helmet", 100, 0, 0, 0, 30, 60, 0, 2,random.randint(0,4)],
    ["Golden Chestplate", 120, 0, 0, 0, 50, 80, 0, 3,random.randint(0,4)],
    ["Golden Leggings", 100, 0, 0, 0, 35, 70, 0, 4,random.randint(0,4)],
    ["Golden Boots", 80, 0, 0, 0, 30, 60, 0, 5,random.randint(0,4)],

    #tier_c_mage_set
    ['Old Wand', 3, 5, 10, 7, 0, 0, 3, 1,random.randint(0,4)],
    ['Cloth Hat', 5, 0, 0, 0, 3, 7, 5, 2,random.randint(0,4)],
    ['Cloth Robe', 7, 0, 0, 0, 5, 10, 7, 3,random.randint(0,4)],
    ['Cloth Leggings', 5, 0, 0, 0, 3, 7, 5, 4,random.randint(0,4)],
    ['Cloth Boots', 3, 0, 0, 0, 2, 5, 3, 5,random.randint(0,4)],

    #tier_b_mage_set 
    ['Apprentice Wand', 7, 10, 15, 10, 0, 0, 5, 1,random.randint(0,4)],
    ['Wizard Hat', 10, 0, 0, 0, 5, 10, 7, 2,random.randint(0,4)],
    ['Wizard Robe', 15, 0, 0, 0, 10, 15, 10, 3,random.randint(0,4)],
    ['Wizard Leggings', 10, 0, 0, 0, 7, 10, 7, 4,random.randint(0,4)],
    ['Wizard Boots', 7, 0, 0, 0, 5, 7, 5, 5,random.randint(0,4)],

    #tier_a_mage_set
    ['Enchanted Wand', 15, 15, 20, 12, 0, 0, 10, 1,random.randint(0,4)],
    ['Enchanted Hat', 20, 0, 0, 0, 10, 12, 10, 2,random.randint(0,4)],
    ['Enchanted Robe', 25, 0, 0, 0, 15, 20, 12, 3,random.randint(0,4)],
    ['Enchanted Leggings', 15, 0, 0, 0, 12, 15, 10, 4,random.randint(0,4)],
    ['Enchanted Boots', 12, 0, 0, 0, 10, 12, 7, 5,random.randint(0,4)],

    #tier_s_mage_set
    ['Crystal Wand', 25, 20, 25, 15, 0, 0, 15, 1,random.randint(0,4)],
    ['Crystal Hat', 30, 0, 0, 0, 15, 20, 12, 2,random.randint(0,4)],
    ['Crystal Robe', 40, 0, 0, 0, 20, 25, 15, 3,random.randint(0,4)],
    ['Crystal Leggings', 20, 0, 0, 0, 15, 20, 12, 4,random.randint(0,4)],
    ['Crystal Boots', 15, 0, 0, 0, 12, 15, 10, 5,random.randint(0,4)],

    #tier_c_knight_set
    ['Rusty Longsword', 5, 7, 0, 10, 0, 0, 0, 1,random.randint(0,4)],
    ['Leather Helmet', 5, 0, 3, 10, 0, 0, 0, 2,random.randint(0,4)],
    ['Leather Chest Plate', 10, 0, 7, 20, 0, 0, 0, 3,random.randint(0,4)],
    ['Leather Leggings', 7, 0, 5, 15, 0, 0, 0, 4,random.randint(0,4)],
    ['Leather Boots', 5, 0, 3, 10, 0, 0, 0, 5,random.randint(0,4)],

    #tier_b_knight_set
    ['Iron Longsword', 10, 8, 0, 12, 0, 0, 0, 1,random.randint(0,4)],
    ['Iron Helmet', 10, 0, 5, 10, 0, 0, 0, 2,random.randint(0,4)],
    ['Iron Chest Plate', 20, 0, 10, 20, 0, 0, 0, 3,random.randint(0,4)],
    ['Iron Leggings', 15, 0, 7, 15, 0, 0, 0, 4,random.randint(0,4)],
    ['Iron Boots', 10, 0, 5, 10, 0, 0, 0, 5,random.randint(0,4)],

    #tier_a_knight_set
    ['Steel Longsword', 20, 10, 0, 15, 0, 0, 0, 1,random.randint(0,4)],
    ['Steel Helmet', 20, 0, 8, 15, 0, 0, 0, 2,random.randint(0,4)],
    ['Steel Chest Plate', 40, 0, 15, 25, 0, 0, 0, 3,random.randint(0,4)],
    ['Steel Leggings', 25, 0, 12, 20, 0, 0, 0, 4,random.randint(0,4)],
    ['Steel Boots', 20, 0, 8, 15, 0, 0, 0, 5,random.randint(0,4)],

    #tier_s_knight_set 
    ['Diamond Longsword', 50, 15, 0, 20, 0, 0, 0, 1,random.randint(0,4)],
    ['Diamond Helmet', 50, 0, 12, 20, 0, 0, 0, 2,random.randint(0,4)],
    ['Diamond Chest Plate', 100, 0, 20, 30, 0, 0, 0, 3,random.randint(0,4)],
    ['Diamond Leggings', 60, 0, 15, 25, 0, 0, 0, 4,random.randint(0,4)],
    ['Diamond Boots', 50, 0, 12, 20, 0, 0, 0, 5,random.randint(0,4)],

    #tier_c_thief_set
    ['Dagger', 5, 7, 10, 0, 0, 0, 5, 1,random.randint(0,4)],
    ['Leather Hood', 5, 0, 0, 5, 0, 10, 0, 2,random.randint(0,4)],
    ['Leather Vest', 10, 0, 0, 10, 0, 20, 0, 3,random.randint(0,4)],
    ['Leather Pants', 7, 0, 0, 7, 0, 15, 0, 4,random.randint(0,4)],
    ['Leather Boots', 5, 0, 0, 5, 0, 10, 0, 5,random.randint(0,4)],

    #tier_b_thief_set
    ['Short Sword', 10, 10, 12, 0, 0, 0, 7, 1,random.randint(0,4)],
    ['Chain Hood', 10, 0, 0, 8, 0, 15, 0, 2,random.randint(0,4)],
    ['Chain Vest', 20, 0, 0, 15, 0, 25, 0, 3,random.randint(0,4)],
    ['Chain Pants', 15, 0, 0, 10, 0, 20, 0, 4,random.randint(0,4)],
    ['Chain Boots', 10, 0, 0, 8, 0, 15, 0, 5,random.randint(0,4)],

    #tier_a_thief_set
    ['Rapier', 20, 12, 15, 0, 0, 0, 10, 1,random.randint(0,4)],
    ['Scale Hood', 20, 0, 0, 12, 0, 20, 0, 2,random.randint(0,4)],
    ['Scale Vest', 40, 0, 0, 25, 0, 35, 0, 3,random.randint(0,4)],
    ['Scale Pants', 25, 0, 0, 15, 0, 30, 0, 4,random.randint(0,4)],
    ['Scale Boots', 20, 0, 0, 12, 0, 20, 0, 5,random.randint(0,4)],

    #tier_s_thief_set
    ['Assassin Blade', 50, 15, 20, 0, 0, 0, 15, 1,random.randint(0,4)],
    ['Shadow Hood', 50, 0, 0, 20, 0, 30, 0, 2,random.randint(0,4)],
    ['Shadow Vest', 100, 0, 0, 40, 0, 50, 0, 3,random.randint(0,4)],
    ['Shadow Pants', 60, 0, 0, 25, 0, 40, 0, 4,random.randint(0,4)],
    ['Shadow Boots', 50, 0, 0, 20, 0, 30, 0, 5,random.randint(0,4)]

]
#8
scene_pic=[
    '''        _    .  ,   .           .
    *  / \_ *  / \_      _  *        *   /\\'__        *
      /    \  /    \,   ((        .    _/  /  \  *'.
 .   /\/\  /\/ :' __ \_  `          _^/  ^/    `--.
    /    \/  \  _/  \-'\      *    /.' ^_   \_   .'\  *
  /\  .-   `. \/     \ /==~=-=~=-=-;.  _/ \ -. `_/   \ 
 /  `-.__ ^   / .-'.--\ =-=~_=-=~=^/  _ `--./ .-'  `-
/        `.  / /       `.~-^=-=~=^=.-'      '-._ `._''',
    '''                                               _
                 ___                          (_)
               _/XXX\ 
_             /XXXXXX\_                                    __
X\__    __   /X XXXX XX\                          _       /XX\__      ___
    \__/  \_/__       \ \                       _/X\__   /XX XXX\____/XXX\ 
  \  ___   \/  \_      \ \               __   _/      \_/  _/  -   __  -  \__/
 ___/   \__/   \ \__     \\\__           /  \_//  _ _ \  \     __  /  \____//
/  __    \  /     \ \_   _//_\___     _/    //           \___/  \/     __/
__/_______\________\__\_/________\_ _/_____/_____________/_______\____/_______''',
    '''           .          .           .     .                .       .
  .      .      *           .       .          .                       .
                 .       .   . *            
  .       ____     .      . .            .    
         >>         .        .               .
 .   .  /WWWI; \  .       .    .  ____               .         .     .         
  *    /WWWWII; \=====;    .     /WI; \   *    .        /\_             .
  .   /WWWWWII;..      \_  . ___/WI;:. \     .        _/M; \    .   .         .
     /WWWWWIIIIi;..      \__/WWWIIII:.. \____ .   .  /MMI:  \   * .
 . _/WWWWWIIIi;;;:...:   ;\WWWWWWIIIII;.     \     /MMWII;   \    .  .     .
  /WWWWWIWIiii;;;.:.. :   ;\WWWWWIII;;;::     \___/MMWIIII;   \              .
 /WWWWWIIIIiii;;::.... :   ;|WWWWWWII;;::.:      :;IMWIIIII;:   \___     *
/WWWWWWWWWIIIIIWIIii;;::;..;\WWWWWWIII;;;:::...    ;IMIII;;     ::  \     .
WWWWWWWWWIIIIIIIIIii;;::.;..;\WWWWWWWWIIIII;;..  :;IMIII;:::     :    \   
WWWWWWWWWWWWWIIIIIIii;;::..;..;\WWWWWWWWIIII;::; :::::::::.....::       \ 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%XXXXXXX
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%XXXXXXXXXX
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%XXXXXXXXXXXXX''',
    '''    .    _    +     .  ______   .          .
 (      /|\      .    |      \      .   +
     . |||||     _    | |   | | ||         .
.      |||||    | |  _| | | | |_||    .
   /\  ||||| .  | | |   | |      |       .
__||||_|||||____| |_|_____________\__________
. |||| |||||  /\   _____      _____  .   .
  |||| ||||| ||||   .   .  .         ________
 . \|`-'|||| ||||    __________       .    .
    \__ |||| ||||      .          .     .
 __    ||||`-'|||  .       .    __________
.    . |||| ___/  ___________             .
   . _ ||||| . _               .   _________
_   ___|||||__  _ \\\--//    .          _
     _ `---'    .)=\oo|=(.   _   .   .    .
_  ^      .  -    . \.|''',
    '''              .
        \  ,g88R_
          d888(`  ).                   _
 -  --==  888(     ).=--           .+(`  )`.
)         Y8P(       '`.          :(   .    )
        .+(`(      .   )     .--  `.  (    ) )
       ((    (..__.:'-'   .=(   )   ` _`  ) )
`.     `(       ) )       (   .  )     (   )  ._
  )      ` __.:'   )     (   (   ))     `-'.:(`  )
)  )  ( )       --'       `- __.'         :(      ))
.-'  (_.'          .')                    `(    )  ))
                  (_  )                     ` __.:'
                                        	
--..,___.--,--'`,---..-.--+--.,,-,,..._.--..-._.-a:f--.''',
    '''              ,.  _~-.,               .
           ~'`_ \/,_. \_
          / ,"_>@`,__`~.)             |           .
          | |  @@@@'  ",! .           .          '
          |/   ^^@     .!  \          |         /
          `' .^^^     ,'    '         |        .             .
           .^^^   .          \                /          .
          .^^^       '  .     \       |      /       . '
.,.,.     ^^^             ` .   .,+~'`^`'~+,.     , '
&&&&&&,  ,^^^^.  . ._ ..__ _  .'             '. '_ __ ____ __ _ .. .  .
%%%%%%%%%^^^^^^%%&&;_,.-=~'`^`'~=-.,__,.-=~'`^`'~=-.,__,.-=~'`^`'~=-.,
&&&&&%%%%%%%%%%%%%%%%%%&&;,.-=~'`^`'~=-.,__,.-=~'`^`'~=-.,__,.-=~'`^`'~=
%%%%%&&&&&&&&&&&%%%%&&&_,.;^`'~=-.,__,.-=~'`^`'~=-.,__,.-=~'`^`'~=-.,__,
%%%%%%%%%&&&&&&&&&-=~'`^`'~=-.,__,.-=~'`^`'~=-.,__,.-==--^'~=-.,__,.-=~'
##mjy#####*"'
_,.-=~'`^`'~=-.,__,.-=~'`^`'~=-.,__,.-=~'`^`'~=-.,.-=~'`^`'~=-.,__,.-=~'

~`'^`'~=-.,__,.-=~'`^`'~=-.,__,.-=~'`^`'~=-.,__,.-=~'`^`'~=-.,__,.-=~'`^''',
    '''                                        |
                                      \ _ /
                                    -= (_) =-
   .\/.                               /   \ 
.\\\//o\\\                      ,\/.      |              ,~
//o\\\|,\/.   ,.,.,   ,\/.  ,\//o\\\                     |\ 
  |  |//o\  /###/#\  //o\  /o\\\|                      /| \ 
^^|^^|^~|^^^|' '|:|^^^|^^^^^|^^|^^^""""""""("~~~~~~~~/_|__\~~~~~~~~~~
 .|\'' . |  \'''""'"''. |`===`|''  '"" "" " (" ~~~~ ~ ~======~~  ~~ ~
    ^^   ^^^ ^ ^^^ ^^^^ ^^^ ^^ ^^ "" """( " ~~~~~~ ~~~~~  ~~~ ~''',
    '''                  _.._
   _________....-~    ~-.______
~~~                            ~~~~-----...___________..--------
                                           |   |     |
                                           | |   |  ||
                                           |  |  |   |
                                           |'. .' .`.|
___________________________________________|0oOO0oO0o|____________
 -          -         -       -      -    / '  '. ` ` \    -    -
      --                  --       --   /    '  . `   ` \    --
---            ---          ---       /  '                \ ---
     ----               ----        /       ' ' .    ` `    \  ----
-----         -----         ----- /   '   '        `      `   \\'''



]

scene_list=[
    "The Enchanted Forest",
    "The Crystal Caves",
    "The Sunken City",
    "The Whispering Woods",
    "The Abandoned Castle",
    "The Frozen Tundra",
    "The Volcanic Wasteland",
    "The Lost Oasis",
    "The Dark Marsh",
    "The Cursed Ruins",
    "The Mysterious Island",
    "The Thundering Waterfall",
    "The Shadowy Vale",
    "The Misty Mountains",
    "The Celestial Realm",
    "The Blighted Lands",
    "The Eerie Graveyard",
    "The Howling Canyon",
    "The Forgotten Temple",
    "The Rusty Mines",
    "The Endless Desert",
    "The Sapphire Sea",
    "The Luminous Lagoon",
    "The Silver Summit",
    "The Twilight Grove",
    "The Hidden Hollow",
    "The Shimmering Shores",
    "The Majestic Meadow",
    "The Golden Glade",
    "The Crimson Cliffs",
    "The Starry Sky",
    "The Glittering Caverns",
    "The Whispering Dunes",
    "The Radiant Rainforest",
    "The Iron Citadel",
    "The Fiery Furnace",
    "The Ashen Plains",
    "The Glimmering Glacier",
    "The Ancient Library",
    "The Mystic Marketplace",
    "The Sky Garden",
    "The Crystal Spire",
    "The Phantom Maze",
    "The Dreaming Valley",
    "The Emerald Enclave",
    "The Misty Morass",
    "The Roaring Rapids",
    "The Haunted Hollows",
    "The Magma Mines",
    "The Wailing Woodlands",
    "The Bleak Bog",
    "The Silver Shoreline",
    "The Ironwood Forest",
    "The Electric Expanse",
    "The Cosmic Canyon",
    "The Fiendish Fortress",
    "The Raging River",
    "The Shadowy Shroud",
    "The Shifting Sands",
    "The Misty Moorland",
    "The Blazing Battlefield",
    "The Crystal Coast",
    "The Fallen Citadel",
    "The Verdant Valley",
    "The Shattered Summit",
    "The Netherworld",
    "The Gleaming Grotto",
    "The Thunderous Thicket",
    "The Ebon Expanse",
    "The Mystic Meadow",
    "The Molten Mountain",
    "The Crimson Catacombs",
    "The Frozen Fortress",
    "The Sacred Sanctuary",
    "The Celestial Citadel",
    "The Poisonous Paradise",
    "The Blackened Bayou",
    "The Stormy Sea",
    "The Crystal Clearing",
    "The Fabled Forest",
    "The Luminous Lair",
    "The Shadowy Stronghold",
    "The Sunlit Savannah",
    "The Rustling Rapids",
    "The Icy Impasse",
    "The Glowing Gorge",
    "The Shimmering Shrine",
    "The Hidden Halls",
    "The Shrouded Sanctuary",
    "The Cloudy Canyons",
    "The Haunted Hills",
    "The Mystic Mountain",
    "The Blighted Bog",
    "The Iron Fortress",
    "The Fiery Fissure",
    "The Starlit Sky",
    "The Cosmic Crater",
    "The Phantom Forest",
    "The Emerald Expanse",
    "The Shrouded Shores",
    "The Shimmering Steps",
    "The Radiant Ruins",
    "The Mystic Marsh",
]
#12
monster_pic=[
    '''⠀⠀⠀⠀⢶⡆⠀⠀⣴⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢠⣾⣿⣦⣤⣭⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⣰⠏⠀⢹⣻⣭⣭⡧⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢠⠏⠀⠴⠚⣷⣿⣿⠀⠀⢀⡤⠖⠛⠹⠶⠤⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⡏⠀⠀⠀⡼⠉⠉⠁⢀⡴⠋⠀⠀⠤⢄⡀⠀⠀⠈⢢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⡇⠀⠀⠀⢧⡀⠀⢠⠎⠀⢠⣤⡞⠒⠲⡌⠃⠀⠀⠀⠱⢤⡀⠀⢀⣀⣀⣀⠀⠀
⠀⣧⠀⠀⠀⠀⠙⠲⠏⠀⢀⡀⠙⣇⠀⠀⢘⡶⠆⣤⠤⠔⢲⣯⡖⠉⠀⠀⠈⢧⠀
⠀⢺⣦⡀⠀⠂⠀⠀⠀⠀⠀⢠⣄⠼⣗⠒⠋⠀⠀⠹⣄⣠⣿⡋⡀⢠⣤⡆⠀⢸⠀
⠀⠀⠀⣇⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠈⠦⣠⠴⣄⢀⣠⣄⣸⠇⠀⣳⣿⣧⠈⢹⠁
⠀⠀⠀⠘⠶⡆⠀⠆⢶⣴⠀⢾⠀⠀⠀⠀⠀⠀⠈⠉⡼⡭⣭⡴⠖⠼⠛⣿⣿⠏⠀
⠀⠀⠀⠀⠀⢻⠀⠀⠀⠁⠀⠘⡄⠀⣠⢤⣀⡤⡄⢸⣿⣿⠋⠀⠀⠀⠀⠙⠁⠀⠀
⠀⠀⠀⠀⠀⣏⠀⠀⠀⠀⠀⠀⠈⠉⠁⠀⠀⠀⠘⠛⢱⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣸⠁⠀⠀⠸⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠚⠃⠀⢿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠹⡆⠀⠀⠀⣷⣄⢠⡀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢸⠃⠀⡄⠀⠀⠺⠾⠃⠀⠀⠀⠀⠾⠀⢹⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⣀⣀⡴⠋⠀⠛⠁⠀⠀⠀⠀⠀⠀⢀⡄⠀⠀⠀⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠃⠀⢀⣾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⠁⠀⠀⠀⠀⣤⡄⠀⠀⠀⡴⠛⠲⡄⠀⠀⠀⠀⠸⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⡇⠀⠀⠀⣀⠀⠘⠀⠀⣠⠞⠁⠀⠀⢣⠀⠀⠀⠀⠠⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠘⠒⠒⠶⠁⠉⠉⠉⠉⠁⠀⠀⠀⠀⡞⠀⠀⠰⠇⠐⠛⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⣼⠁⠀⠀⠀⠀⠀⠀⠈⢳⡄⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠙⠷⠤⠤⠤⠤⠿⠉⠁⠀⠀⠀⠀⠀⠀⠀''',
    '''⠀⢠⠤⢲⢯⢫⡉⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⣴⡊⣟⠆
⠀⠀⡸⣘⡲⢾⡡⠂⠀⡠⠔⠒⠒⠢⡄⠀⠀⠀⠀⣐⡨⠯⠗⣩⡶
⠀⣨⣀⠔⠘⠖⡘⠀⠘⠀⠀⣶⡆⠀⠈⣆⠀⠀⢈⠐⠞⢲⠂⢱⠀
⢠⡟⠄⠁⡒⠈⢀⠔⠙⣄⠀⠀⠀⠀⡰⠁⠈⢂⠀⠓⡤⠔⠈⣵⠂
⠘⡁⠀⠀⠻⡄⡜⢨⣄⡀⠉⠲⠮⠉⢀⣠⣤⡙⠄⡤⠃⠀⠀⠜⡆
⠀⠣⠀⠀⠀⠹⡀⠸⣿⢾⡗⢢⣤⣶⠿⣾⠝⠀⡘⠁⠀⠀⠀⡔⠀
⠀⠀⠳⡀⠀⠀⠹⣄⠀⠉⠉⠙⠋⠈⠉⠀⣄⡴⠁⠀⠀⢀⡜⠁⠀
⠀⠀⠀⠉⢄⠀⠀⠉⠑⠤⣄⣀⢀⣤⣠⠺⠃⠀⠀⠀⡔⠁⠀⠀⠀
⠀⠀⠀⠀⠀⠡⡀⠠⣄⢀⠀⠈⠉⠡⠁⠀⣠⠜⠀⠸⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢠⠓⠀⠁⠙⠑⠄⣠⡤⠺⠊⠋⠀⠀⢣⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠈⡀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡘⠀⠀⠀⠀⠀
⠀⠀⠀⢀⡀⠀⡘⢦⠀⡍⠁⠒⠒⠒⠂⢉⡁⠀⡠⠁⠀⠀⠀⠀⠀
⠀⠀⠀⣗⣈⣭⢞⢷⣷⠚⡄⠀⠀⠀⠠⣿⣳⢭⣏⣀⠀⠀⠀⠀⠀
⠀⠀⠀⠙⠳⠬⢤⣁⣭⠛⢾⠀⠀⠀⠀⠈⡕⠯⠄⠀⣴⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠀⠀⠀⠀⠀⠀⠉⠉⠉⠀⠀⠀⠀⠀''',
    '''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⡗⠶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣤⣤⣀⠀⠀⢹⣌⠘⢿⣷⢦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠺⠿⠿⢯⣉⠉⠉⠉⠛⠲⠿⢷⣦⣼⡗⢄⠻⡳⡈⠹⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢳⣄⡀⠀⠀⠐⠢⢤⣈⠉⠛⠛⠛⠻⡄⢹⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡾⢋⣿⠀⠈⠉⠓⠂⢈⡇⠀⠀⠀⠀⢱⠈⠻⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠉⢻⡿⢧⣤⠀⢀⣶⣮⣿⠁⠀⠲⣤⣀⠀⠘⠄⣹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠿⠚⣿⠀⡾⠁⠀⠸⣧⠘⢶⣭⠈⠁⠀⢈⠙⢦⣠⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠇⢀⠉⢻⣴⣷⠁⣧⡀⢸⣧⣀⠙⠷⠦⣤⣿⡆⠈⢿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠛⠉⠛⣶⢀⣻⣿⡄⢹⣿⡛⠉⠹⣟⠲⢤⣈⠈⢳⣻⡿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠻⣤⣿⢿⡜⢿⣿⡄⠀⠈⠳⣄⡉⠳⣤⡟⠒⠿⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠟⠃⠀⠻⣮⠉⠙⣆⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠲⢶⡶⠶⢶⡾⠁⠀⠀⠀⠤⠬⢷⣄⠀⠙⢦⡀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣹⣦⣍⣉⡳⠶⣤⣄⠀⠀⢀⣹⡄⢄⠀⣱⠀⠀⠀⠈⢻⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠰⠿⢯⡉⠁⠀⠀⠀⠀⠀⢈⡉⠛⠻⣷⠤⠤⣀⣸⡇⢸⠀⠙⢦⡀⠀⠀⠘⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠶⣦⠀⢀⣀⣤⠶⢽⠶⡏⠉⢆⢀⣤⡿⠃⠋⠀⠀⠀⢳⡀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⡿⣶⣯⣦⣼⣦⠾⠖⠓⠛⠉⠉⠀⠀⠀⠀⠀⠀⠀⢀⡇⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡾⠿⠛⠉⠉⠁⠀⠀⠀⠀⠀⠀⣠⣦⠴⠀⠀⠀⠰⣄⠀⢰⡋⠁⠀⢀⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣀⣠⣴⣾⣫⠤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⠋⢅⠆⠀⠀⠀⠀⢻⡆⣨⡇⠀⠀⣼⠉⢳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⣠⣶⠋⢁⣼⡏⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣧⢨⠇⠀⠀⠀⢠⣾⡷⠁⠀⠀⣼⠟⠦⡄⠻⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⡞⢉⡾⢃⠁⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣠⣤⣴⠟⠁⠀⠀⠀⠀⣠⡟⠉⠀⠀⢠⣾⠋⠀⠀⠀⠀⢻⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢰⣞⢡⡟⠀⠀⠀⠀⠀⠀⣠⠶⠶⠖⠊⠁⢀⣠⡴⠟⠋⠀⠀⠀⣠⡾⠋⢀⣀⣤⠶⠛⢷⣀⠀⠀⠀⠀⠈⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢀⣿⡟⠁⢀⣀⠤⠴⠶⠖⢃⣀⡤⠶⠒⣹⡟⠉⠀⠀⠀⢀⣤⡾⠛⠋⠉⠉⠁⠀⠀⠀⠀⠈⠳⢺⡇⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣠⡞⣿⠁⢀⡜⠁⠀⠀⢀⣼⠛⠁⠀⠀⠀⡟⠀⠀⣀⣤⠾⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣧⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣀⡟⢐⠛⠃⠀⠀⣔⣿⠃⠀⠀⠀⠀⡼⠧⠖⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⣠⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠉⣿⡇⡞⠀⠀⠀⡼⣽⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢘⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⣷⣷⠀⠀⠀⢼⠹⣏⠀⠀⠀⣀⣴⠶⠛⠲⠶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠸⣿⡆⠀⠀⠘⣆⠹⣶⡶⠛⠉⠀⠀⠀⣀⠀⢀⣈⣙⡷⢦⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠙⢿⣦⠄⠀⠈⠢⢤⣀⣀⣀⡤⠔⠋⠈⠛⠁⢀⣴⢤⣀⡴⠿⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠙⢦⣀⠀⠀⠀⠀⠀⠀⠀⣀⡀⠀⣠⡴⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠈⠙⣶⣤⣀⠀⠙⠒⠚⠛⠿⣭⡉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠈⠻⣏⠑⠲⡄⣄⠀⠀⠈⠻⢦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢷⣀⠀⠀⠑⢆⠀⣀⠀⠈⢿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⠦⢤⣤⣀⣀⣀⣀⣉⣙⣛⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀''',
    '''⠀⠀⠀⠀⠀⢀⣤⣔⠲⢤⡖⢶⣶⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⡤⣴⠢⣄⡀⠀
⠀⢀⣤⣤⠤⣜⡿⠭⡤⠈⢳⣤⣀⡈⢳⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⡤⢶⣿⡀⣠⣿⣴⣻⡇⠀
⠀⠘⠓⠓⢶⠈⢹⢀⡟⠀⣼⣡⠏⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠁⣇⣻⣾⢻⠁⣨⣿⣭⣀⠀
⠀⠀⠀⢠⡿⠒⠋⠉⣉⣛⡻⠄⢀⡴⠋⠀⠀⠀⢀⣠⡶⠟⠉⠉⠉⠉⠛⠷⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⣀⣨⣇⣀⣸⣟⢁⣴⣻⣼⣷
⠀⢀⡶⠋⠐⠒⠒⠒⣏⠨⠭⠗⢯⡀⠀⠀⠀⣠⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣦⠀⠀⠀⠀⠀⠀⠀⢀⣠⠖⠻⠽⢩⡏⠀⠀⠉⢹⡟⠛⠋⠁
⠀⣼⣄⠀⠀⣰⠖⠑⠺⣗⠲⠆⢠⠇⠀⠀⢠⡏⠀⠀⠀⠀⣴⣻⣷⡆⠀⠀⠀⠀⠘⡇⠀⠀⠀⠀⠀⠀⢸⠁⠐⢶⣶⠯⠿⣕⠚⠁⠈⠻⡆⠀⠀
⢰⡟⡏⠒⠲⣄⠀⠀⠀⠈⢂⣠⠟⠀⠀⢀⣼⡇⠀⠀⠀⠀⠻⣿⡿⠃⠀⠀⠀⠀⠀⡏⠓⢦⣄⠀⠀⠀⠸⣆⠀⠈⠁⠀⠀⠼⠀⡀⠀⣠⣇⠀⠀
⢸⡿⣷⠀⠀⠈⠓⠲⣶⠞⠉⠁⠀⢀⣴⠟⠉⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⠇⠀⠀⠈⢳⡀⠀⠀⠙⠷⣄⣀⣀⣀⡠⠞⠉⠉⣿⣼⠀⠀
⣿⣇⠈⠃⠀⠀⠀⢰⣇⣄⠀⠀⠀⡜⠁⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⢀⣠⡾⠃⠀⠀⠀⠀⠀⢻⡀⠀⠀⠀⠀⣹⠉⠉⠀⠀⠀⢸⠟⡝⠀⠀
⡏⠛⠀⠀⠀⠀⠀⢸⣿⣗⠀⠀⣼⡥⠖⠒⠀⠀⠀⠈⠙⠻⠶⠶⠶⠶⠾⢛⠁⠀⠀⠀⠀⡀⠈⠉⠲⣇⠀⠀⠀⣸⣿⠀⠀⠀⠀⠀⠀⣰⣳⡄⠀
⢹⡄⠀⠀⠀⠀⠀⠀⠙⢿⣇⢰⠏⠀⢠⣶⢶⣦⣄⡀⠀⠀⠉⠒⠒⠒⠋⠁⠀⠀⣀⣴⣿⣿⣿⣦⠀⠘⡇⢀⣿⠟⠁⠀⠀⠀⠀⠀⠰⠋⢸⡇⠀
⠸⣷⠀⠀⠀⠀⠀⠀⠀⠘⠻⣾⠀⠀⢸⣿⣿⣧⣈⣿⣷⣤⣀⠀⠀⠀⠀⣀⣠⣾⣯⣼⣿⠛⣿⠏⠀⠀⢸⡟⠋⠀⠀⠀⠀⠀⠀⠀⠀⢀⡞⠀⠀
⠀⠙⣆⠀⠀⠀⠀⠀⠀⠀⠀⢿⠀⠀⠈⠻⣿⡿⢿⣿⣿⠀⠉⢻⣿⣿⣿⣿⣿⠛⠻⣿⣿⠟⠋⠀⠀⠀⡼⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡞⠀⠀⠀
⠀⠀⠈⣷⡄⠀⠀⠀⠀⠀⠀⠸⣧⡄⠀⠀⠈⠙⠶⠼⣿⣿⣶⣿⣿⣿⣿⣀⣿⠶⠖⠋⠁⠀⠀⠀⠀⣸⠃⠀⠀⠀⠀⠀⠀⠀⠀⡴⡿⠃⠀⠀⠀
⠀⠀⠀⠈⢿⡳⠀⠀⠀⠀⠀⠀⠹⣽⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⣠⡾⠃⠀⠀⠀⠀⠀⠀⠀⢀⣴⡟⠁⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣿⢦⠀⠀⠀⠀⠀⠀⠙⢯⠷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⣟⡼⠋⠀⠀⠀⠀⠀⠀⠀⠀⣠⡼⠋⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠈⠷⣄⠀⠀⠀⠀⠀⠀⠀⠁⠘⠳⣤⢢⣄⠀⠀⠀⠀⠀⠀⣀⡀⢀⡴⠋⣰⠟⠀⠀⠀⠀⠀⠀⠀⢀⣤⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠈⠳⣄⠀⠀⠀⠀⡀⠀⠀⠀⠀⠉⠻⠿⠲⢬⣆⣠⣞⣿⡵⢫⠖⠁⠀⠀⠀⠀⠀⡾⠁⠀⠀⣸⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢣⡀⠀⠀⢹⡀⡀⠀⠀⠀⠀⠀⠀⠀⠈⠋⠘⠈⡴⠃⠀⠀⠀⠀⠀⢀⡾⠁⠀⠀⢰⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⠀⠀⠀⠻⡿⣄⡀⣦⡀⠀⠀⠀⠀⠀⠀⠚⠁⠀⣀⡀⢀⣠⣾⡟⠀⠀⠀⠀⢸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣧⠤⠄⠀⠹⠌⠓⣿⠙⠷⣄⠀⠀⠀⡄⠀⣠⡴⣿⡵⠟⠹⠋⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣏⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠈⠱⣄⣼⣿⠞⠋⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠟⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⣠⡀⠀⠀⠀⡟⠳⠤⣄⣀⣀⠀⠀⠀⢀⣀⣀⣠⠤⠴⠚⡄⠀⠀⠀⠀⢀⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⠀⠹⡷⣄⠀⠀⣷⠀⠀⠀⠉⠉⠉⠉⠉⠉⠉⠁⠀⠀⠀⣀⡇⠀⠀⢀⣴⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣠⢞⣁⣀⣀⣀⣈⣓⣤⣀⠙⣆⡀⠘⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡾⣿⠁⣠⠴⢯⣽⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢸⡟⡏⠁⠀⣀⣀⡽⠿⢿⣿⣷⢯⡩⠗⢻⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⢿⣟⠋⢹⣁⣀⣰⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠘⢧⢷⡖⠿⠟⢛⣏⠙⠲⡌⢻⣷⣷⢤⣀⠚⣧⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⢦⢻⡘⣆⣨⠵⠚⠛⠛⠳⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠈⠛⢿⣆⡘⢉⣈⡉⠉⠙⠉⣁⣬⠟⡺⢵⣾⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣧⠳⣼⣉⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠒⠛⠿⢾⣵⣞⠁⠀⠒⣹⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣄⣀⠉⠉⠙⠛⢛⣛⡫⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀''',
    '''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣠⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⢯⡼⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣲⣄⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡤⠼⡄⠀⠀⠀⠀⠀⠀⠀⠀⡠⠒⠉⠉⠢⡀⠀⠀⠀⠀⠀⢸⠧⠼⡆⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣧⠀⡤⠚⢓⡦⠤⣤⠔⡦⠖⠻⠁⠀⠸⠆⠀⡷⣤⠤⣀⣀⢴⡛⠒⢤⣹⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢟⠀⣠⠊⠀⡰⣡⠊⠀⢀⡠⠷⠄⣀⣠⠔⠳⡈⠳⡈⢦⠀⠘⢄⢠⠏⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡟⢩⣍⢺⣷⠃⠀⢰⢃⠤⠤⢤⣀⠞⠉⠳⣄⠀⢱⡈⣦⠖⢾⡃⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⠖⠒⠢⢵⣮⣝⣻⠇⠀⢀⡼⠁⠀⠀⢰⣿⣷⡄⠀⠘⡄⠀⣿⣔⣩⢯⠷⠊⠉⠙⢦⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⡴⠋⠀⠀⢠⠤⠬⣑⣾⠀⠀⠘⣿⣄⠀⠀⢈⣿⡟⠀⠀⣠⡇⠀⢸⠗⣛⠡⠄⠐⢧⠀⠈⢆⠀⠀
⠀⠀⠀⠀⠀⠀⢀⡎⠀⠀⠀⣠⠃⠀⠀⠀⢹⠀⠀⠀⠈⠙⠛⠋⠁⠀⠘⢳⣿⠛⠀⠀⢸⠉⠀⠀⠀⠀⢸⡀⠀⠸⡄⠀
⠀⠀⠀⠀⠀⣴⡿⠀⠀⠀⢰⣇⡀⠀⠀⠀⢸⡀⠀⠀⠀⣠⠴⡞⠉⠉⣏⢉⠏⣆⠀⠀⡜⠀⠀⠀⣀⠤⢼⠃⠀⢀⣷⠀
⠀⠀⠀⠀⠐⡇⢀⠀⠀⠀⢈⠀⣹⠀⠀⠀⠀⣇⠀⣠⢾⡄⢰⠛⡄⢸⠹⡜⠀⢸⡄⢀⠇⠀⠀⠀⣇⠀⡄⠀⠀⠘⠛⡄
⢀⣀⣀⣠⣤⣼⣿⣄⡆⠀⣿⡏⠁⠀⠀⠀⠀⡏⠸⣹⡾⠽⠷⠤⠼⠧⠴⠧⢤⠼⠿⣾⠀⠀⠀⠀⢹⡾⠇⠀⠀⠀⢰⠃
⠘⣿⣝⠛⠛⣛⣿⣿⠭⣙⠉⠀⠀⠀⠀⠀⢀⣽⠋⢡⠛⠉⠉⠒⠒⠒⠛⠒⢦⠉⠒⠇⠀⠀⠀⠀⠈⠓⠒⠛⠒⠛⠋⠀
⠀⠈⠙⠥⣀⣠⣞⠟⢀⡼⠃⠀⠀⣠⠔⠊⠁⣸⠆⡆⠀⠀⠀⠈⠙⠒⠠⠀⢀⡇⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣠⠊⢁⡔⠋⢀⡤⠒⠉⣀⣤⡴⠚⠁⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⢸⠃⠈⠒⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢻⡀⠘⠓⠚⣁⡤⠔⣋⡵⠋⠀⣀⠴⠊⠉⠑⠒⠒⠒⠒⠒⠒⠒⠋⠉⠲⢄⡀⠑⠢⢀⣀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠱⠶⠶⠭⠕⠻⡏⠀⠀⠀⣞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠟⠂⠀⠀⢨⠆⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⡗⠀⠀⢺⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠏⠀⠀⠀⢸⠋⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡆⠀⠀⠸⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡞⠀⠀⠀⣰⠃⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢀⡤⡤⢤⡤⢼⠃⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠞⠀⠀⢀⠤⣧⠤⢴⣤⡀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢸⣧⠃⡏⠀⠀⠁⠀⠀⠀⢈⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣇⠉⠀⣀⠁⠀⠈⡆⠀⣹⣷⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠉⠓⠛⠒⠒⠊⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠁⠀⠀⠀⠀⠀''',
    '''⠀⠀⠀⣀⣀⣄⣀⣤⡤⠶⠶⣤⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢠⠞⠋⠁⠀⠀⠀⠀⠀⠀⢀⣽⣏⡉⠛⢷⡄⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⣄⣀⠀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⣼⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠀⢸⣟⠀⠀⠀⠀⠀⠀⢰⡿⠁⢀⣬⣹⡛⠉⠙⠛⠷⣤⡀⠀⠀⠀⠀
⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣻⣿⡿⠀⠸⣧⠀⠀⠀⠀⠀⢀⣿⠃⠀⣾⣿⣿⣿⡆⠀⠀⠀⠀⠉⠛⢶⣄⠀
⠀⢻⠀⠀⠀⠀⠀⠀⢀⣸⣿⢿⡿⣿⠇⠀⢈⣿⠀⠀⠀⠀⠀⣸⠇⠀⢸⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠘⡇
⠀⠘⣧⠀⠀⠀⠀⠀⣼⡯⠝⠍⢲⡟⠀⠀⣸⡏⠀⠀⠀⠀⠀⣿⠀⠀⢸⡿⣾⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇
⠀⠀⢹⡀⠀⠀⣠⡾⠇⢳⡀⠀⣿⠁⠀⠀⣿⡀⠀⠀⠀⠀⣸⡿⠀⠀⢸⡟⡋⠋⣹⡆⠀⠀⠀⠀⠀⠀⢀⡿⠀
⠀⠀⣼⡤⠖⠛⣿⡧⠀⠀⠑⣄⠇⠀⠀⠀⠸⣿⠄⠀⢠⣾⠏⠀⠀⠀⢸⠇⠀⣠⠟⣷⠀⠀⠀⠀⠀⢠⡞⠀⠀
⠀⠀⠀⠀⠀⠀⠙⣧⠀⠀⠀⠈⢶⡆⠀⠀⠀⢿⣤⣦⣾⠃⠀⠀⠀⣠⢃⡤⠚⠁⠀⠻⣦⡀⠀⠀⣴⠋⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠹⡆⠀⠀⠀⠀⠀⣀⣀⣄⣀⣙⣇⡀⠀⠀⠀⠐⠛⠁⠀⠀⠀⢠⣾⠉⠻⣆⢸⠃⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣟⣠⣤⡶⠞⠋⠉⠉⠈⣿⣇⠀⠀⠑⠂⠀⠐⠠⣄⠀⠀⣴⡟⠁⠀⠀⠈⠛⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣠⣿⠛⠉⠁⠀⡀⠀⠀⠀⠀⠈⠉⠉⠲⣤⡀⠀⠠⣄⠈⠢⣞⡁⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣼⡟⠋⠉⠀⠀⣰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⠀⠀⠀⠳⡄⢻⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢀⣼⠟⠀⠀⠀⠀⠀⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⢸⡀⠀⠘⣾⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⣿⣷⣠⠄⠀⠀⢀⣼⣧⠀⠀⠀⠀⠀⠀⣠⠆⠀⠀⠀⠀⢸⠇⠀⠀⢹⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢶⡿⣿⡟⣠⣴⣾⣿⣿⣿⣦⣀⠀⠀⠀⡌⠁⠀⠀⠀⠀⢀⣿⠀⠀⡇⠈⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢾⡇⣿⠻⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⡰⠁⢀⣤⣶⣿⣷⣾⣿⡄⠀⢿⡄⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢀⣧⡇⠀⣿⣿⣿⣿⣿⣿⣿⡿⠁⣸⢡⠀⣼⣿⣿⣿⣿⣿⣿⣿⣄⠈⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢀⣴⡿⠟⠁⠘⠿⢿⣿⣿⣿⠿⠋⠀⢀⡟⢸⠀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣾⣡⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢼⠁⠀⠀⠀⠀⠀⠀⣸⠁⠀⠀⣀⣴⣾⣧⣿⡀⠀⠘⣿⣿⣿⣿⣿⣿⣿⠈⣿⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠘⣿⣦⠀⠀⠀⠀⠀⠁⠀⠀⠀⠈⠻⡇⠉⢿⣷⡄⠀⠈⠁⠘⡿⠛⠿⠇⠘⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠘⢿⣿⣶⣶⣶⣶⣦⢙⡇⠀⠀⠀⠀⠀⠈⠉⠀⠀⠀⠀⢸⠁⠀⠀⠀⠀⠈⠻⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠁⠀⠀⠛⣿⣿⡈⠀⢀⠀⠀⠀⠀⠀⠀⢸⠋⢑⣶⣦⣄⡀⠀⠀⣀⣤⡶⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣾⣟⠙⡟⡶⢺⡞⢻⣄⣠⣤⡄⠀⢀⣿⡿⠏⠉⠛⠻⠿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠙⣿⣾⣶⣧⣼⣄⣼⣁⢸⡇⣹⣶⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠈⠙⠋⠛⠛⠻⡿⠛⠻⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀''',
    '''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⡟⠉⡙⠿⢟⣛⡷⠶⣤⣄⣀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣧⠀⣱⣄⠀⠀⠈⠀⠀⠈⢉⣛⣶⣤⣀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⡤⠶⣶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⡇⠙⢷⠀⠀⠀⠀⣴⠟⠉⠀⠈⠁
⠀⠀⠀⠀⠀⣠⡴⠾⠋⠡⠰⣴⡏⠀⠀⠀⣠⣤⣤⣶⠞⠛⠿⣿⢿⠛⠛⠳⢶⣤⣀⠀⢀⣿⠀⠃⠀⠀⠳⣄⠀⢠⡇⠀⠀⠀⠀⠀
⠀⠀⢀⡴⠛⠉⠀⠀⠀⢀⠎⠀⣷⣄⣴⡏⣀⣼⣿⣿⡇⢀⠀⠈⣇⢳⠀⠀⠀⠀⠉⠳⣾⣯⠃⠀⠀⢀⣀⡈⢳⠀⣿⡀⠀⠀⠀⠀
⢀⣴⣫⠴⠒⠒⠒⠲⣤⡀⠀⠀⢈⣿⣿⣿⣿⣿⣿⣿⠁⠀⠀⡀⡟⠘⠆⠀⠀⠀⣀⣴⡿⠃⣠⡶⠛⠋⠉⠛⠛⢷⣼⣧⠀⠀⠀⠀
⠚⠋⠀⠀⠀⠀⠀⠀⣺⡴⠛⢶⣾⣿⣿⣿⣿⣿⡿⠃⠀⠀⠀⢣⠇⠀⠀⠀⢠⢿⡏⠉⠀⡰⢿⡆⠀⠀⠀⠀⠀⠀⠘⠛⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠛⠁⠀⢸⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀⢠⠟⠀⠀⠀⠀⠀⠘⠛⠉⣹⠇⠘⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠈⠉⠀⠀⠀⠀⠀⠄⣱⠏⣰⠇⠀⠀⠀⠀⠀⢠⣾⡏⠀⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⢧⡀⠀⠀⠀⠂⢈⡤⢞⡡⠚⠁⠀⠀⠀⠀⠀⠀⢸⡿⠀⢰⣻⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡏⠙⠛⠲⠶⠒⠛⠉⠒⠉⢀⣀⣀⠀⣀⠀⠀⠀⠠⠟⠁⣠⢏⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠈⣶⣤⣄⣀⣰⣿⣿⣿⣿⣮⣣⡀⠀⠀⢠⢞⠏⣼⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣧⣾⠿⠶⡼⠇⠀⠉⠛⢿⣿⣿⣿⣿⡿⡿⠗⠀⠀⠕⠋⢰⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠿⠀⠀⠀⠀⣀⣀⣀⠀⠙⢿⣿⣿⣷⠀⠀⠀⠀⠀⣠⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠟⠉⠉⠉⠙⠻⣾⣿⣿⠏⠀⠀⢀⡄⠈⣹⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀⢠⣤⣤⣀⣠⣾⠟⣉⠔⠂⠀⢼⠇⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⣠⡾⠃⠘⢦⡀⠈⠙⠒⠈⠁⠀⠀⠀⠉⠀⣄⢹⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢠⠞⣿⠉⠀⠈⠉⠀⠀⠀⠀⠙⣦⡀⠀⠀⠀⠀⠀⠀⣀⠀⠈⢾⣷⡀⠀⠀⠀⢀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⢱⡀⠀⠀⠀⠀⠀⠀⠀⣀⡾⠉⠢⠀⣀⠴⠒⠉⠀⡀⠀⠀⠉⠙⠛⠛⠉⠉⠀⠈⠙⠲⣄⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⠶⠖⠛⠉⠁⠀⠀⢀⡞⡁⠀⠀⠀⢸⣿⢳⢠⠀⠀⠀⠀⠀⣀⣀⣀⣀⠀⠈⢳⡄⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡞⠉⠀⠀⡀⠤⠀⠂⠀⠀⣼⢰⠃⠀⢀⠀⣠⡥⠶⢧⣤⠤⠴⠒⠛⠉⠁⠀⠉⠻⣦⡀⢻⡄⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡀⠀⢠⠟⣿⠛⠛⠛⠛⠛⢻⣾⠀⠀⠸⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡼⠃⣸⡇⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢷⡀⠸⠄⢿⡀⠀⠀⠀⠀⠈⢿⡀⠀⠙⠲⠿⠷⠶⠤⣄⡀⠀⠀⠀⠀⠀⠀⠀⢸⡅⣾⠋⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠢⣄⣀⠙⠦⣄⠀⠀⠀⠀⠙⠦⣤⣤⣤⣤⣤⣄⡀⠙⢦⡀⠀⠀⠀⠀⢀⣼⠗⣸⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢹⡆⠈⣧⠀⠀⠀⠀⠀⠀⠀⠀⣀⡤⠟⠀⠀⢠⡇⠀⠀⠀⠀⠀⠙⠛⠉⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡴⠚⣋⡼⠃⠀⠀⠀⠀⠀⠀⠀⢾⣁⣀⣀⣠⡴⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀''',
    '''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡶⠛⠻⢶⣄⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣇⠀⠀⠀⠈⠛⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⠀⠀⣠⣤⣦⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣷⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢷⣤⣤⣴⡿⠛⠉⠉⢻⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠒⠶⣤⡀⠀⠀⠉⠉⠁⠀⠀⠀⠀⢸⣿⣿⠀⠀⣀⠤⠒⠂⢄⡀⠀⠀⠀⠀⠀⢨⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣽⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⠀⠎⠀⠀⠀⠀⠀⠱⡀⠀⠀⢀⣴⣿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣰⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣄⠀⠀⠀⠀⠀⠀⢀⠇⢀⣴⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢰⣿⠁⠀⠀⠀⢀⣤⣶⣾⣿⣶⣦⡀⢻⣿⣟⠳⠄⠠⠤⠄⣠⣾⣰⣿⣿⠏⠀⠀⠀⠀⠀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢿⣿⡀⠀⣀⣴⣿⠟⠉⠉⠛⣿⣿⣿⣆⢻⣿⣦⡀⠀⠀⡜⣿⣿⣿⣿⡏⠀⠀⢀⣴⣾⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠈⠻⠿⠿⠿⠋⠀⠀⠀⠀⠀⠈⢿⣿⣿⡄⢹⣿⣇⠀⢀⡾⣟⠼⣿⣿⣧⠀⣴⣿⣿⠟⠁⠘⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣼⣿⣿⣿⣿⣿⣏⠉⣻⣞⠁⢰⣿⣿⣿⣿⣿⣿⣏⡀⠀⠀⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⡏⠚⣻⣿⠳⢻⣿⣿⣿⣿⣿⣿⣿⠁⠀⠸⣿⡇⠀⠀⠀⠀⢀⣠⣴⣦⡄
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⣧⢠⣿⣿⢠⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⢿⣧⡀⠀⢀⣴⡿⠋⠀⠈⢿
⠀⣠⣶⡿⠿⠿⢿⣶⣤⡀⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡀⠀⠀⠛⠿⠿⠿⠛⠁⠀⠀⠀⡸
⣰⡟⠁⠀⠀⠀⠀⠙⢿⣿⣷⣶⣶⣾⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠘⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢻⡇⠀⠀⠀⠀⠀⠀⠀⠈⠙⠛⠛⠛⠉⠀⣿⣿⣿⢿⣿⣿⡿⣿⢿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠸⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣀⣿⣌⠻⡝⢆⢛⡟⢻⣿⣿⣿⣧⡀⠀⠀⠹⣿⣿⣿⡄⠀⠀⢀⣀⡀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⡟⠈⣿⣿⣵⠎⠈⠁⠀⠘⣿⣿⣿⣿⣿⣷⣦⣤⣽⣿⣿⣿⣾⣿⡿⠿⠿⢿⣦⡀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⡇⢀⣿⣿⣿⣷⣶⣤⣀⣼⣿⣿⣿⣿⣟⡛⠛⠛⠛⠻⣿⣿⣯⠁⠀⠀⠀⠀⢹⣷⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣶⣤⣽⣿⣿⣷⡀⠀⠀⠀⢠⡿⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⡟⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠉⠛⠿⢿⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⠛⠁⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠁⠈⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠉⠉⠉⠙⠛⠛⠉⠀⠀⠀⠀⠀⠀⠀''',
    '''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⠟⠶⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠋⠈⠀⠀⣯⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡼⠁⠀⠀⠀⠀⠙⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡼⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⠁⠀⠀⠀⠀⠀⠀⠈⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡞⠁⠀⢷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠓⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⢀⣀⡤⠼⠷⠶⠶⠦⣄⣀⠀⠀⠀⠀⠀⣻⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠔⠛⠉⠀⠀⠀⠀⢀⣤⡾⠛⢎⠙⠦⣄⠀⠀⠈⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢠⠞⠁⠀⠀⠀⠀⠀⠀⢠⠞⢡⡗⠀⠘⣧⠀⠈⢷⡄⠀⠈⢳⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣰⠋⠀⠀⠀⠀⠀⠀⠀⢰⠏⠀⡟⠀⠀⠀⢺⡄⠀⠀⠙⢦⠀⠀⠹⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⠠⠿⣆⠀⠀⢀⡇⠀⠀⠀⠀⠑⢄⡀⠈⠳⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠟⠀⢀⣸⠁⠀⠀⠀⠀⠀⠀⠉⠓⠶⠬⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡆⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢠⡏⠀⠀⠀⠀⠀⠀⣀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠘⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠢⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⢸⣿⣭⡉⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣇⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢸⡇⠀⠀⠀⠀⠑⠻⣿⡾⠟⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠳⡄⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣆⠀⠀⠀⠀⠀⠀⢰⡟⠀⠀⠀⠀⠀⠀
⠀⢀⣰⠿⢷⣶⢿⡷⠀⠀⠀⡀⠀⠀⠀⢀⣴⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⡄⠀⠀⠀⠀⠀⣸⠁⠀⠀⠀⠀⠀⠀
⢰⣿⠙⣧⣄⣽⡮⠤⠴⠾⠭⠯⠤⠤⠖⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣇⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀
⢸⣿⣆⣿⡟⠗⠒⠒⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⣸⠁⠀⠀⠀⠀⠀⠀⠀
⠀⠙⠶⣽⣿⡒⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠀⠀⢀⣠⣤⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⢠⡇⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠉⠉⠉⠉⠉⠉⠲⢦⣀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠞⢁⡴⠚⠉⠀⠀⠀⠈⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡯⠀⠀⠀⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠓⣦⠤⠤⠤⠞⠋⢀⡶⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠃⠀⠀⡸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⡄⠀⠀⠀⠀⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡟⠀⠀⣸⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⣀⠀⢳⡀⠀⠀⠀⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡞⠀⠀⡴⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣯⡿⠷⣶⣮⠉⠉⠻⣄⠀⠀⢹⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠟⢀⣠⠞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣇⣀⣰⠟⠙⠀⠀⠀⠈⠳⢦⣀⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⠷⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠛⠉⠉⠉⠉⠛⠛⢻⣿⣧⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⠴⣖⣶⠲⡶⠒⠋⠉⠉⠁⠀⠈⠙⠒⢤⣤⣀⣀⣀⣀⡤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣷⠞⠋⢉⣡⣴⠃⢀⣠⡤⠤⠖⠒⠒⠒⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠶⠖⠋⠀⣇⣀⣼⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀''',
    '''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣄⣀⣟⢦⡀⠀⣼⡆⠀⣀⠀⢰⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢰⣿⣄⣾⡇⠀⢀⡤⢚⣭⠟⠉⠉⠛⠲⣅⠀⢹⣶⠿⠿⣟⡏⢀⡟⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣠⡼⠻⣿⡏⠻⣤⠞⠀⣾⠃⠀⠀⢀⣤⠴⠚⠀⢀⣥⣴⡿⡏⢷⡞⢡⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣽⣀⣀⣈⣠⣄⣀⠀⠈⠙⠤⠔⠊⢉⣠⡶⠶⣿⣛⣿⣬⠙⠷⠀⢰⡿⢀⣠⠴⣲⣶⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠈⠉⠉⠁⠀⠀⠈⠉⠳⢤⠀⠀⢠⡿⠁⠀⠀⠀⠀⠉⠉⠑⢆⠀⠈⠛⣉⡶⠞⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⡀⠸⣧⠔⢻⠇⠀⠀⠀⠀⠀⠘⡆⠀⢠⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⣴⠏⠀⠀⠀⠀⠀⠀⡼⠁⠀⣼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⣸⠃⠀⠀⠀⢀⣠⠴⠊⠀⣀⣾⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢠⣶⠶⣤⡀⠀⠀⠀⠀⠀⡇⠀⡿⠀⢀⡤⠞⠉⠀⣀⡴⠾⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢼⣟⠀⠀⠻⣦⣀⡤⠤⢴⡇⠀⡇⣰⠋⠀⣠⠖⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠰⣟⣀⠀⠀⠀⠀⣠⠔⣲⣧⣀⡽⢧⡴⣞⣓⡒⢚⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢹⠀⡶⠶⢛⡷⠋⠁⠀⠀⠀⠘⢿⠁⠀⢀⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠈⠉⢀⡴⠞⠁⠀⣾⣿⡷⠀⠀⠀⠉⠛⣯⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢀⣤⠖⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⢐⡆⠀⠈⠛⠦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⣾⡡⠆⠀⠀⠀⠀⠀⠀⠀⠀⣀⡤⠞⠁⠀⠀⠀⠀⠀⠙⠦⣄⡀⠀⢀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠈⢧⣄⣀⡀⠀⣠⡶⠒⢏⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠀⠀⠀⠈⠉⠓⠒⠒⠒⠒⠒⠒⠒⠛⠑⠒⢦⣀⡀⠀⠀⠀
⠀⠀⠀⠀⠀⠉⠉⠉⠉⠀⠀⠈⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠫⡉⠢⡀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⡆⢸
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡾
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠃
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢹⢀⡀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡼⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣼⣇⣇⠀⠀⠀⠀⠀⡄⢀⠆⠀⠀⠀⠀⠀⠀⠀⣠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⢠⠇⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⠀⠀⠀⣾⣼⠁⣸⠀⠀⠀⠀⠀⠀⢀⣴⠋⠀⠀⠀⠀⠀⣀⣠⣤⡶⠛⢳⠀⠀⠀⠀⠀⡼⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣇⣵⢸⡿⣿⠖⣻⡄⠀⠀⠀⠀⠀⣼⠉⠉⠑⠺⡛⠋⠉⠉⠛⣿⠀⠀⠈⢧⠀⠀⠀⢠⡇⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣺⢻⡀⠀⠀⣲⠏⠙⢄⠀⠀⠀⠀⡿⠀⠀⠀⠀⠙⢦⠀⠀⠀⠸⡀⠀⠀⠈⢧⠀⠀⢸⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⣸⠃⠀⣼⠋⠀⠀⠈⢧⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⡇⠀⠀⢀⡇⠀⠀⠀⢸⡆⠀⠸⡄⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢯⠀⢠⡟⠀⠀⠀⠀⢸⡇⠀⠀⢳⠀⠀⠀⠀⠀⠀⡟⠀⢀⡾⠃⠀⠀⠀⠈⢧⠀⢀⡧⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⣿⠃⠀⠀⠀⠀⠈⢧⠀⠀⣿⠀⠀⠀⠀⠀⣰⠃⢀⡿⠁⠀⠀⠀⠀⠀⡾⠀⣼⠁⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠃⠀⡏⠀⠀⠀⠀⠀⠀⠈⡇⠀⣿⠀⠀⠀⠀⣠⠏⠀⣸⠃⠀⠀⠀⠀⠀⢸⠇⠀⡏⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠃⠀⢰⡇⠀⠀⠀⠀⠀⠀⠀⢳⠀⢹⡄⠀⠀⣰⠋⠀⠀⣿⠀⠀⠀⠀⠀⢠⠏⠀⠀⣧⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡇⠀⠀⢸⠇⠀⠀⠀⠀⠀⠀⠀⡾⠀⠈⣇⠀⡰⠃⠀⠀⣴⠟⠀⠀⠀⠀⢠⡏⠀⠀⢠⡟⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠞⠁⠀⢰⡟⠀⠀⠀⠀⠀⠀⠀⠀⣇⠀⠀⣸⠺⠥⠤⠤⠶⠋⠀⠀⠀⠀⣠⠞⠀⠀⣰⡿⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⣏⣀⣀⡠⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠆⠀⠸⣆⠀⠀⠀⠀⠀⠀⠀⠀⠐⠧⠤⠔⠚⠋⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠦⢤⡴⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀''',
    '''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡖⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠇⢸⢦⡙⠦⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⠀⠀⢱⣠⠲⣌⢱⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢧⠀⢸⠙⣇⠀⠈⠈⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡟⠃⠈⡠⢿⣷⣾⢶⣾⣷⡀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡟⠐⠒⠉⣠⠃⡸⠘⣿⢮⣁⣻⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣠⠴⣦⠀⠁⠀⠀⠀⣿⡀⠈⠉⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⠃⢀⣋⣀⠀⠀⠀⢸⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢸⢿⡏⣰⡿⠉⡽⠀⠀⠀⡇⡾⠹⣿⣦⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠈⠘⣷⣿⠀⢸⡖⣦⡀⠀⠃⠃⢀⢹⣷⣄⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⡆⢺⣇⢽⣿⢦⡀⠀⠈⢦⣙⣿⣷⣦⡀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⣦⢻⣈⣟⣏⠁⠀⠀⢀⠈⠻⣿⣿⣿⣄⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⣏⠘⠉⡟⠞⠀⢀⡄⢸⣆⡀⠈⣿⣿⣿⣧⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⢸⠀⠀⡇⣰⢶⣟⡥⢤⡝⠛⠛⠛⠉⣿⡿⡇
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢸⡀⢀⣧⡇⡾⠁⢀⡠⠇⠀⣰⠀⠀⢸⣧⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣶⣿⣿⣿⣾⣿⣷⣷⣤⣤⣤⣶⣾⡇⠀⠀⢸⣿⠀
⠀⠀⠀⠀⠀⠠⢞⣿⣿⣿⠤⠄⠀⠀⣠⠴⠚⠛⠉⠉⠉⠉⠉⠉⠉⢡⠋⣿⠀
⠀⠀⠀⠀⢀⣴⠿⠋⢉⣀⣀⣀⣀⣀⠁⠀⠠⢄⠀⠀⠀⠀⠀⠀⢀⣄⣼⡏⠀
⠀⠀⢀⣴⣿⣵⣾⣿⠿⠿⠿⠿⠷⠶⣦⣤⣤⣀⣙⣳⣶⣶⣶⣿⣿⡿⠋⠀⠀
⢀⡴⠛⠉⠀⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠀⠀⠀⠀⠀⠀''',
    '''⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⡀⠀⣠⡀⢀⣴⣾⡇⠀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢰⡯⣳⡾⢻⣷⠯⠽⠿⠯⣉⣩⣿⢿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢀⣤⣾⠛⡽⠷⠛⠀⠀⠀⠀⢤⡤⠟⠋⣜⣏⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣷⣶⡌⠃⠀⠠⠞⣿⣍⡓⢦⡀⢣⣀⡰⣿⣟⣁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣇⣇⣇⡀⠀⠰⢋⣈⡏⠙⣧⠱⠀⠉⠛⡹⢸⡈⢻⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣠⣖⠛⠋⠉⠉⠓⢧⡀⣿⣄⢀⡿⠀⠀⠀⠀⠀⢨⡿⣭⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣇⠀⠀⠀⠰⠄⠀⠀⠈⠉⠉⠋⠀⠀⠀⠀⠀⠀⡸⠙⣎⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠈⢏⠑⠢⡀⠀⠀⠀⠀⡠⠃⠀⠀⠀⠀⠀⠀⣶⣧⣤⡿⢀⣀⣤⢿⡙⢦⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠈⠓⠦⠬⣑⣒⣒⡯⠴⠦⡤⠤⠤⠖⠀⠀⠏⠹⣾⣫⠭⠭⠴⠚⠙⣌⢧⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠟⠁⠀⣿⠲⣄⣽⡉⣹⣷⡶⢦⣼⣀⡀⠘⣾⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡼⢁⡖⠀⠀⣿⡀⡘⢯⠻⡟⠁⠙⢆⠉⠉⠉⢳⡟⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⠊⠀⠀⠀⢸⢸⣿⣸⠀⢯⠉⠒⢌⣧⠀⠀⠘⠁⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠃⠀⠀⠀⠀⢾⣾⠿⠃⠀⠈⣿⠟⠉⠉⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⡴⢦⡀⠀⠀⠀⢀⡴⠒⠋⠙⡿⠀⠀⠀⠀⢀⡾⠋⠀⠀⠀⠀⠀⣏⡒⣄⠈⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀
⣰⡇⢀⠙⢦⠀⢰⠏⠀⠀⠀⠘⡇⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠹⡟⠛⠀⠀⢳⠀⠀⠀⠀⠀⠀⠀⠀
⣿⠀⡏⢦⣈⣇⣟⠀⠀⠀⠀⠈⢿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢧⠀⠀⢆⢸⡄⠀⠀⠀⠀⠀⠀⠀
⠻⠞⣇⠈⠹⣄⠸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⢠⣷⠼⠃⠀⡼⣸⠁⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢸⡄⢻⣮⡳⢿⣄⠀⠀⠀⠀⠀⠀⢀⣠⠔⠃⠀⠀⡖⠒⠲⡽⠁⠀⠀⢠⡧⠋⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠻⡄⠉⢾⣴⢮⠉⠛⠒⠒⠒⣉⠉⠀⢸⡟⠲⡄⢸⠷⠞⠁⠀⠀⣠⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠘⢦⡀⠉⠛⠰⢯⣙⡆⢰⣇⣙⡆⠸⠓⠊⠉⠀⠀⠀⠀⢀⡼⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠙⠦⣄⡀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⡶⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠲⠦⢤⣄⣀⣀⣀⣤⠶⠶⠚⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀'''

]
#4
boss_pic=[


    '''⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⣤⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⠀⠀⠀⢀⣴⠟⠉⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣷⣀⢀⣾⠿⠻⢶⣄⠀⠀⣠⣶⡿⠶⣄⣠⣾⣿⠗⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⢻⣿⣿⡿⣿⠿⣿⡿⢼⣿⣿⡿⣿⣎⡟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⡟⠉⠛⢛⣛⡉⠀⠀⠙⠛⠻⠛⠑⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣧⣤⣴⠿⠿⣷⣤⡤⠴⠖⠳⣄⣀⣹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣀⣟⠻⢦⣀⡀⠀⠀⠀⠀⣀⡈⠻⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⡿⠉⡇⠀⠀⠛⠛⠛⠋⠉⠉⠀⠀⠀⠹⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡟⠀⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠃⠀⠈⠑⠪⠷⠤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⣿⣿⣿⣦⣼⠛⢦⣤⣄⡀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠑⠢⡀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣠⠴⠲⠖⠛⠻⣿⡿⠛⠉⠉⠻⠷⣦⣽⠿⠿⠒⠚⠋⠉⠁⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢦⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢀⣾⠛⠁⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢣⠀⠀⠀
⠀⠀⠀⠀⣰⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣑⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡇⠀⠀
⠀⠀⠀⣰⣿⣁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣧⣄⠀⠀⠀⠀⠀⠀⢳⡀⠀
⠀⠀⠀⣿⡾⢿⣀⢀⣀⣦⣾⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⣫⣿⡿⠟⠻⠶⠀⠀⠀⠀⠀⢳⠀
⠀⠀⢀⣿⣧⡾⣿⣿⣿⣿⣿⡷⣶⣤⡀⠀⠀⠀⠀⠀⠀⠀⢀⡴⢿⣿⣧⠀⡀⠀⢀⣀⣀⢒⣤⣶⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇
⠀⠀⡾⠁⠙⣿⡈⠉⠙⣿⣿⣷⣬⡛⢿⣶⣶⣴⣶⣶⣶⣤⣤⠤⠾⣿⣿⣿⡿⠿⣿⠿⢿⣿⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇
⠀⣸⠃⠀⠀⢸⠃⠀⠀⢸⣿⣿⣿⣿⣿⣿⣷⣾⣿⣿⠟⡉⠀⠀⠀⠈⠙⠛⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇
⠀⣿⠀⠀⢀⡏⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⠿⠿⠛⠛⠉⠁⠀⠀⠀⠀⠀⠉⠠⠿⠟⠻⠟⠋⠉⢿⣿⣦⡀⢰⡀⠀⠀⠀⠀⠀⠀⠁
⢀⣿⡆⢀⡾⠀⠀⠀⠀⣾⠏⢿⣿⣿⣿⣯⣙⢷⡄⠀⠀⠀⠀⠀⢸⡄⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣿⣻⢿⣷⣀⣷⣄⠀⠀⠀⠀⢸⠀
⢸⠃⠠⣼⠃⠀⠀⣠⣾⡟⠀⠈⢿⣿⡿⠿⣿⣿⡿⠿⠿⠿⠷⣄⠈⠿⠛⠻⠶⢶⣄⣀⣀⡠⠈⢛⡿⠃⠈⢿⣿⣿⡿⠀⠀⠀⠀⠀⡀
⠟⠀⠀⢻⣶⣶⣾⣿⡟⠁⠀⠀⢸⣿⢅⠀⠈⣿⡇⠀⠀⠀⠀⠀⣷⠂⠀⠀⠀⠀⠐⠋⠉⠉⠀⢸⠁⠀⠀⠀⢻⣿⠛⠀⠀⠀⠀⢀⠇
⠀⠀⠀⠀⠹⣿⣿⠋⠀⠀⠀⠀⢸⣧⠀⠰⡀⢸⣷⣤⣤⡄⠀⠀⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡆⠀⠀⠀⠀⡾⠀⠀⠀⠀⠀⠀⢼⡇
⠀⠀⠀⠀⠀⠙⢻⠄⠀⠀⠀⠀⣿⠉⠀⠀⠈⠓⢯⡉⠉⠉⢱⣶⠏⠙⠛⠚⠁⠀⠀⠀⠀⠀⣼⠇⠀⠀⠀⢀⡇⠀⠀⠀⠀⠀⠀⠀⡇
⠀⠀⠀⠀⠀⠀⠻⠄⠀⠀⠀⢀⣿⠀⢠⡄⠀⠀⠀⣁⠁⡀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⢀⣐⡟⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⢠⡇''',
    '''         ,     .
        /(     )\               A
   .--.( `.___.' ).--.         /_\ 
   `._ `%_&%#%$_ ' _.'     /| <___> |\ 
      `|(@\*%%/@)|'       / (  |L|  ) \ 
       |  |%%#|  |       J d8bo|=|od8b L
        \ \$#%/ /        | 8888|=|8888 |
        |\|%%#|/|        J Y8P"|=|"Y8P F
        | (.".)%|         \ (  |L|  ) /
    ___.'  `-'  `.___      \|  |L|  |/
  .'#*#`-       -'$#*`.       / )|
 /#%^#%*_ *%^%_  #  %$%\    .J (__)
 #&  . %%%#% ###%*.   *%\.-'&# (__)
 %*  J %.%#_|_#$.\J* \ %'#%*^  (__)
 *#% J %$%%#|#$#$ J\%   *   .--|(_)
 |%  J\ `%%#|#%%' / `.   _.'   |L|
 |#$%||` %%%$### '|   `-'      |L|
 (#%%||` #$#$%%% '|            |L|
 | ##||  $%%.%$%  |            |L|
 |$%^||   $%#$%   |            |L|
 |&^ ||  #%#$%#%  |            |L|
 |#$*|| #$%$$#%%$ |\           |L|
''',
    '''                  __,-----,,,,  ,,,--------,__ 
                _-/|\\\\/|\\\\/|\\\\\|\//\\\\\//|/|//|\\\\_ 
               /|\/\//\\\\\\\\\\\\\\\\\\\\//////////////\\\\\\\\ 
             //|//           \\\\\///            |\\\\|\ 
            ///|\/             \/               \|\|\ 
           |/|//                                 |\\\\|\  
          |/|/                                    \|\|\  
          ///;    ,,=====,,,  ~~-~~  ,,,=====,,    ;|\|\ 
         |/|/   '"          `'     '"          "'   ;|\|
         ||/`;   _--~~~~--__         __--~~~~--_   ;/|\|
         /|||;  :  /       \~~-___-~~/       \  :  ;|\| 
         /\|;    -_\  (o)  / ,'; ;', \  (o)  /_-    ;|| 
         |\|;      ~-____--~'  ; ;  '~--____-~      ;\| 
          ||;            ,`   ;   ;   ',            ;||
        __|\ ;        ,'`    (  _  )    `',        ;/|__ 
    _,-~   \|/;    ,'`        ~~ ~~        `',    ;|\   ~-,_ 
  ,'         ||;  '                           '  ;\|/       `, 
 , _          ; ,         _--~~-~~--_           ;            _',
,-' `;-,        ;        ,; |_| | |_| ;,       ;;        ,-;' `-,
      ; `,      ;       ;_| : `~'~' : |_;       ;      ,' ;
       ;  `,     ;     :  `\/       \/   :     ;     ,'  ;
        ;   `,    ;     :               ;     ;    ,'   ;
         ;    `,_  ;     ;./\_     _/\.;     ;   _,    ;
spb   _-'        ;  ;     ~~--|~|~|--~~     ;   ;       '-_
  _,-'            ;  ;        ~~~~~        ;   ;           `-,_
,~                 ;  \`~--__         __--~/  ;                ~,
                    ;   \   ~~-----~~    /   ;                   
                     ~-_  \  /  |  \   /  _-~                    
                        ~~-\/   |   \/ -~~                       
                       (=)=;==========;=(=)''',
    '''⠀⠀⠀⠀⠀⠀⣰⠂⠀⣼⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⡟⢆⢠⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡘⡇⠹⢦⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠹⣦⣹⢸⡖⠤⢀⠀⠘⢿⠛⢔⠢⡀⠃⠣⠀⠇⢡⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠹⠀⡷⣄⠠⡈⠑⠢⢧⠀⢢⠰⣼⢶⣷⣾⠀⠃⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠤⢖⡆⠰⡙⢕⢬⡢⣄⠀⠑⢼⠀⠚⣿⢆⠀⠱⣸⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢀⣤⡶⠮⢧⡀⠑⡈⢢⣕⡌⢶⠀⠀⣱⣠⠉⢺⡄⠀⢹⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢀⡸⠀⠈⡗⢄⡈⢆⠙⠿⣶⣿⠿⢿⣷⣴⠉⠹⢶⢾⡆⠀⠀⠀
⠀⠀⠀⢠⠶⠿⡉⠉⠉⠙⢻⣮⡙⢦⣱⡐⣌⠿⡄⢁⠄⠑⢤⣀⠐⢻⡇⠀⠀⠀
⠀⠀⠀⢀⣠⠾⠖⠛⢻⠟⠁⢘⣿⣆⠹⢷⡏⠀⠈⢻⣤⡆⠀⠑⢴⠉⢿⣄⠀⠀
⠀⠀⢠⠞⢃⢀⣠⡴⠋⠀⠈⠁⠉⢻⣷⣤⠧⡀⠀⠈⢻⠿⣿⡀⠀⢀⡀⣸⠀⠀
⠀⠀⢀⠔⠋⠁⡰⠁⠀⢀⠠⣤⣶⠞⢻⡙⠀⠙⢦⠀⠈⠓⢾⡟⡖⠊⡏⡟⠀⠀
⠀⢠⣋⢀⣠⡞⠁⠀⠔⣡⣾⠋⠉⢆⡀⢱⡀⠀⠀⠀⠀⠀⠀⢿⡄⠀⢇⠇⠀⠀
⠀⠎⣴⠛⢡⠃⠀⠀⣴⡏⠈⠢⣀⣸⣉⠦⣬⠦⣀⠀⣄⠀⠀⠈⠃⠀⠀⠙⡀⠀
⠀⡸⡁⣠⡆⠀⠀⣾⠋⠑⢄⣀⣠⡤⢕⡶⠁⠀⠀⠁⢪⠑⠤⡀⠀⢰⡐⠂⠑⢀
⠀⠏⡼⢋⠇⠀⣸⣟⣄⠀⠀⢠⡠⠓⣿⠇⠀⠀⠀⠀⠀⠑⢄⡌⠆⢰⣷⣀⡀⢸
⠀⣸⠁⢸⠀⢀⡿⡀⠀⠈⢇⡀⠗⢲⡟⠀⠀⠀⠀⠀⠀⠀⠀⠹⡜⠦⣈⠀⣸⡄
⠀⣧⠤⣼⠀⢸⠇⠉⠂⠔⠘⢄⣀⢼⠃⡇⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠚⠳⠋⠀
⠐⠇⣰⢿⠀⣾⢂⣀⣀⡸⠆⠁⠀⣹⠀⢡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢀⡏⣸⠀⣟⠁⠀⠙⢄⠼⠁⠈⢺⠀⠘⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠈⡏⣸⢰⡯⠆⢤⠔⠊⢢⣀⣀⡼⡇⠀⠹⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢠⢻⢸⡇⠀⠀⠑⣤⠊⠀⠀⠈⣧⠀⠀⠙⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠸⣼⢸⠟⠑⠺⡉⠈⢑⠆⠠⠐⢻⡄⠀⠀⠈⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⡟⣸⡀⠀⠀⣈⣶⡁⠀⠀⠀⢠⢻⡄⠀⠀⠀⠑⠤⣄⡀⠀⠀⠀⠀⠀⠀
⠀⠀⢰⠁⣿⡿⠟⢏⠁⠀⢈⠖⠒⠊⠉⠉⠹⣄⠀⠀⠀⠀⠀⠈⠑⠢⡀⠀⠀⠀
⠀⣀⠟⢰⡇⠀⠀⠈⢢⡴⠊⠀⠀⠀⠀⠀⣸⢙⣷⠄⢀⠀⠠⠄⠐⠒⠚⠀⠀⠀
⠘⠹⠤⠛⠛⠲⢤⠐⠊⠈⠂⢤⢀⠠⠔⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠣⢀⡀⠔⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀''',



]
#2
treasure_pic=[
  '''         __________
        /\____;;___\ 
       | /         /
       `. ())oo() .
        |\(%()*^^()^\ 
       %| |-%-------|
      % \ | %  ))   |
      %  \|%________|
       %%%%                '''
]
#2
HE_pic=[
    '''        ______
       /     /\ 
      /     /  \ 
     /_____/----\_    (  
    "     "          ).  
   _ ___          o (:') o   
  (@))_))        o ~/~~\~ o   
                  o  o  o''',
    '''                  ^
                 / \ 
            ^   _|.|_   ^
          _|I|  |I .|  |.|_
          \II||~~| |~~||  /
           ~\~|~~~~~~~|~/~
             \|II I ..|/
        /\    |II.    |    /\ 
       /  \  _|III .  |_  /  \ 
       |-~| /(|I.I I  |)\ |~-|
     _/(I | +-----------+ |. )\_
     \~-----/____-~-____\-----~/
      |I.III|  /(===)\  |  .. |
      /~~~-----_________---~~~\ 
     `##########!\-#####%!!!!!| |\ 
    _/###########!!\~~-_##%!!!\_/|
    \##############!!!!!/~~-_%!!!!\ 
     ~)#################!!!!!/~~--\_
  __ /#####################%%!!!!/ /
  \,~\-_____##############%%%!!!!\/
  /!!!!\ \ \~-_###########%%%!!!!\ 
 /#####!!!!!!!\~-_#######%%%!!!!!!\_
/#############!!!\#########%%%!!!!!!\\'''
]
#5
shop_pic=[
    '''           x
.-. _______|
|=|/     /  \ 
| |_____|_""_|
|_|_[X]_|____|''',
    '''       `'::.
    _________H ,%%&%,
   /\     _   \%&&%%&%
  /  \___/^\___\%&%%&&
  |  | []   [] |%\Y&%'
  |  |   .-.   | ||  
~~@._|@@_|||_@@|~||~~~~~~~~~~~~~
     `""") )"""`''',
    '''       _
     _|=|__________
    /              \ 
   /                \ 
  /__________________\ 
   ||  || /--\ ||  ||
   ||[]|| | .| ||[]||
 ()||__||_|__|_||__||()
( )|-|-|-|====|-|-|-|( ) 
^^^^^^^^^^====^^^^^^^^^^^''',
    '''                            +&-
                          _.-^-._    .--.
                       .-'   _   '-. |__|
                      /     |_|     \|  |
                     /               \  |
                    /|     _____     |\ |
                     |    |==|==|    |  |
 |---|---|---|---|---|    |--|--|    |  |
 |---|---|---|---|---|    |==|==|    |  |
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^''',
    '''                          []=++-
                      _II__|
                     [[__] |
    _________________||  |___
   /^^^^^^,-.^^^^^^^^\|__|^^^\ 
  /     ,',-.`.               \ 
 /    ,','   `.`.     ,-"""-.  \ 
/___,','__   __`.`.__/_,"T"._\__\ 
 |='-'||/\| |^^||`-`=|_|_|_|_|=|
 |= = ||)(| |__||= ==|_|_|_|_|=|
 |= ==|"""" """"| = =____= =_==|
 |== =| __   __ |= =| [] | |^|=|
 |= ==||/\| |==||== |   o|=|_| |
 |== =||)(| |  || = | == | == =|
 |= ==|"""" """"|== |____|= = =| 
 """""|_________|"""'====`""""""'''
]
#12
monster_list = [  
    #name,atk,spd,acc,def,hp,mp  
    ['Mud Slime', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Slime Poison'],
    ['Baby Cyclop', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Cyclop Punch'],
    ['Sea Dragon', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Tidal Wave'],
    ['Grown Cyclop', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Cyclop Smash'],
    ['Hell Potatoe', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Potato Explosion'],
    ['Bunny Skull', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Carrot Strike'],
    ['Hell Squid', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Ink Spray'],
    ['Slender Slant', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Slant Strike'],
    ['Quarrel Squirrel', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Nut Shot'],
    ['Mental Moose', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Mind Crush'],
    ['Lone Wolf', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Bleed Bite'],
    ['Baby Dragon', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Fire Breath']
]

boss_list = [  
    #name,atk,spd,acc,def,hp,mp  
    ['Chad Shrek', random.randint(10, 30), random.randint(10, 25), random.randint(10, 25), random.randint(10, 40), random.randint(40, 100),random.randint(0,100), 'Shrek Shack'],
    ['Minotaur', random.randint(10, 30), random.randint(10, 25), random.randint(10, 25), random.randint(10, 40), random.randint(40, 100),random.randint(0,100), 'Minor Strike'],
    ['Icecular', random.randint(10, 30), random.randint(10, 25), random.randint(10, 25), random.randint(10, 40), random.randint(40, 100),random.randint(0,100), 'Blood Lust'],
    ['Dragon Queen', random.randint(10, 30), random.randint(10, 25), random.randint(10, 25), random.randint(10, 40), random.randint(40, 100),random.randint(0,100), 'Dragon Breath']
]

shop_list = [   
    "The Adventurer's Emporium",             
    "The Enchanted Bazaar",
    "The Arcane Market",    
    "The Blacksmith's Forge",    
    "The Herbalist's Haven",    
    "The Alchemist's Lab",    
    "The Wizard's Tower",    
    "The Rogue's Den",    
    "The Paladin's Armory",    
    "The Ranger's Outpost",    
    "The Necromancer's Lair",    
    "The Mage's Guild",    
    "The Fighter's Pit",    
    "The Beastmaster's Menagerie",    
    "The Merchant's Mart",    
    "The Treasure Trove",   
    "The Collector's Corner",    
    "The Mystic's Shop",    
    "The Demon's Den",    
    "The Angel's Sanctuary"
]


mp=[["x" for j in range(100)] for i in range(100)]
scene_mp=[[random.choice(scene_pic) for j in range(100)] for i in range(100)]
scenename_mp=[[random.choice(scene_list) for j in range(100)] for i in range(100)]
blackstart=[item_list[1],item_list[2],item_list[3],item_list[4]]
Gold=10
SGold="10     "

now_weapon="None"
now_helmet="None"
now_chestplate="None"
now_leggings="None"
now_boots="None"

h_potion=5
m_potion=5

health=int(Life)
mana=100
skill=[]

#weapon,helmet,chestplate,leggings,boots,health,mana,h_potion,m_potion,skill
hero=[[now_weapon],[now_helmet],[now_chestplate],[now_leggings],[now_boots],[health],[mana],[h_potion],[m_potion],[skill]]
#name,atk,spd,acc,def,hp,mp
stat=["Name",10,10,10,10,health,mana,Angel]

#function
def progress_bar(prog, total):
    percent = int(50 * (prog / float(total)))
    bar = '█' * percent + '-' * (50 - percent)
    print(f"\r|{bar}| {percent*2}%", end="\r")

def mainmenu():
    os.system('cls')
    print('''
                ___ ___  ___  ___ _____ ___  ___ ___   _
               / __/ _ \|   \| __|_   _/ _ \| _ \_ _| /_\\
              | (_| (_) | |) | _|  | || (_) |  _/| | / _ \\
               \___\___/|___/|___| |_| \___/|_| |___/_/ \_\\

                      ⋆｡°✩⋆⁺｡˚⋆˙‧₊MAIN MENU₊‧˙⋆˚｡⁺⋆✩°｡⋆  HIGH SCORE : {}
                      /------------------------------\\
                      >         ◀ (S)TART  ▶         <
                      >         ◀ (O)PTION ▶         <
    _ _ _ _ _         >         ◀ (Q)UIT   ▶         <         _ _ _ _ _
   [ " " " "_]        \\------------------------------/        [_" " " "_]
    |       |                                                  |       |
    |   o   |   +=================]  %%  [=================+   |   o   |
    |       |___|  *                                     * |___|       |
    |   o   |        |        RPG Roguelike game        |      |   o   |
    |       |       -|-------                    -------|-     |       |
   /    o    \\              -=>  By JedizR  <=-               /    o    \\
   |         |                                                |         |
   |   /\\    |__    Present Leagues of Code Summer Camp     __|   /\\    |
   |  ||||   |  |  *                                    *  |  |  ||||   |
   |  ||||   |  +==========================================+  |  ||||   |
  /\\/\\/\\/\\/\\/\\                                                /\\/\\/\\/\\/\\/\\
    '''.format(High_Score))
    
    p=msvcrt.getch()
    p=chr(p[0])
    if(p=='s'):
        start()
    elif(p=='o'):
        option()

    elif(p=='q'):
        print("Are you sure?(y/n)")
        q=msvcrt.getch()
        q=chr(q[0])
        if(q=='y'):
            os.system('cls')
            print("See you again! don't forget to touch some grass btw!")
            quit()
        else: mainmenu()
    else: 
        mainmenu()

def create_shop():
    global newshop
    newshop.clear()
    for i in range(0,random.randint(3,10)):
        newshop.append(random.choice(item_list))
    while(['None',0,0,0,0,0,0,0,0,0] in newshop):
        newshop.remove(['None',0,0,0,0,0,0,0,0,0])

def option():
    os.system('cls')
    global Diff,Life,Angel,max_chapter,health,Gold,SGold
    print('''         
            ,a_a
           {/ ''\_
           {\ ,_oo)
           {/  (_^
 .=.      {/ \___)))*)----------;=====;`
(.=.`\   {/   /=;  ~~                 :
    \ `\{/(   \/\                     :
     \  `. `\  ) )                    |
      \    // /_/_                    |
       '==''---))))              . .__|__. .
    ''')
    print("       ⋆｡°✩ ⋆ ⁺｡˚⋆˙‧₊OPTION₊‧˙⋆˚｡⁺ ⋆ ✩°｡⋆")
    print("       /-------------------------------\\")
    print("       |     (D)ifficulty : {}    |".format(Diff))
    print("       |     (L)ife Point : {}    |".format(Life))
    print("       |     (G)old       : {}    |".format(SGold))
    print("       |     (A)ngel card : {}    |".format(Angel))
    print("       |-------------------------------|")
    print("       |        ◀ (M)ain Menu  ▶       |")
    print("       \\-------------------------------/")
    o=msvcrt.getch()
    o=chr(o[0])
    if(o=='m'):
        mainmenu()
    elif(o=='d'):
        print("Difficulty :")
        print("(1) EASY  ")
        print("(2) NORMAL (Default)")
        print("(3) HARD  ")
        print("(4) ENDLESS")
        d=msvcrt.getch()
        d=chr(d[0])
        if(d=='1'):
            Diff='EASY   '
            max_chapter=3
        elif(d=='2'):
            Diff='NORMAL '
            max_chapter=5
        elif(d=='3'):
            Diff='HARD   '
            max_chapter=7
        elif(d=='4'):
            Diff='ENDLESS'
            max_chapter=1e9
        option()
    elif(o=='l'):
        print("Life Point :")
        print("(1) 100   (Default)")
        print("(2) 75    ")
        print("(3) 50    ")
        print("(4) 99999 ")
        l=msvcrt.getch()
        l=chr(l[0])
        if(l=='1'):
            Life='100    '
            health=int(Life)
            stat[5]=health
        elif(l=='2'):
            Life='75     '
            health=int(Life)
            stat[5]=health
        elif(l=='3'):
            Life='50     '
            health=int(Life)
            stat[5]=health
        elif(l=='4'):
            Life='99999  '
            health=int(Life)
            stat[5]=health
        option()
    elif(o=='a'):
        print("Angel card :")
        print("(1) On    (Default)")
        print("(2) Off   ")
        a=msvcrt.getch()
        a=chr(a[0])
        if(a=='1'):
            Angel='On     '
            stat[7]=Angel
        elif(a=='2'):
            Angel='Off    '
            stat[7]=Angel
        option()
    elif(o=='g'):
        print("Gold :")
        print("(1) 10     (Default)")
        print("(2) 40   ")
        print("(3) 100  ")
        print("(4) 99999")
        a=msvcrt.getch()
        a=chr(a[0])
        if(a=='1'):
            Gold=10
            SGold="10     "
        elif(a=='2'):
            Gold=40
            SGold="40     "
        elif(a=='3'):
            Gold=100
            SGold="100    "
        elif(a=='4'):
            Gold=99999
            SGold="99999  "
        option()
    else:
        option()

def start():
    global Name,Angel,skill
    os.system('cls')
    if Angel == 'On     ':
        skill.append("Angel Blessing")
    print('''
      ':.
         []_____
        /\      \\
    ___/  \__/\__\__
---/\___\ |'\'''\''|__\\-- ---
   ||'\''| |''||''|''|
   ``"""`"`""))""`""`        
    ''')
    print("??? : One day after hunting...you enter your house")
    msvcrt.getch()
    print("??? : everything normal...until")
    msvcrt.getch()
    print("??? : you found letter on the table")
    msvcrt.getch()
    os.system('cls')
    print("  ____________________________________________")
    print(" / \                                          \\")
    print("|  |    Dear Hero,                            |")
    print(" \_|                                          |")
    print("   |         PLEASE SAVE THE KINGDOM          |")
    print("   |                                          |")
    print("   |       My name is Ve the 3rd. I -was-     |")
    print("   |    the the king of Codetopia.            |")
    print("   |                                          |")
    print("   |       Our Empire is under attack!!!      |")
    print("   |    by a powerful vampire Count Icecula.  |")
    print("   |                                          |")
    print("   |       No matter what you were before,    |")
    print("   |    from now on you are the [HERO]        |")
    print("   |                                          |")
    print("   |       Your destination is the castle.    |")
    print("   |    Kill Icecula and save the empire.     |")
    print("   |                                          |")
    print("   |    Good luck on your adventure!          |")
    print("   |    ______________________________________|___")
    print("   |   /        (PRESS ANY TO CONTINUE)          /")
    print("    \_/_________________________________________/")

    msvcrt.getch()
    os.system('cls')
    print("??? : the old king left only a letter here, Now it's your turn.")
    msvcrt.getch()
    print("??? : What is your name?")
    msvcrt.getch()
    print("You : wait who are you???")
    msvcrt.getch()
    print("??? : Oh I'm the narrator, I'm here to help you from now on.")
    msvcrt.getch()
    print("Narrator : Now tell me your name buddy.")
    Name=""
    ch=0
    while(Name==""):
        if(ch==1):
            sys.stdout.write('\x1b[1A')
            sys.stdout.write('\x1b[2K')
        Name=str(input("Enter your name : "))
        ch=1
    print("Narrator : Okay {} let's begin our adventure!\n".format(Name))
    stat[0]=Name
    print("(PRESS ANY TO BEGIN YOUR ADVENTURE)")
    msvcrt.getch()
    play()

def shop(shopname,item,gold,state):
    os.system('cls')
    global item_list,hero,Gold,now_weapon,now_helmet,now_chestplate,now_leggings,now_boots,h_potion,m_potion,skill,itemlist
    ch=1
    print('''
______________________________________________________________________________________________________
|  SHOP : {}   GOLD : {} Qouta : {} (E)xit shop
|_____________________________________________________________________________________________________|
    '''.format(shopname,gold,state),end="\r")
    for i in range(0,len(item)):
        print("| ({}){} | cost : {} | atk : {} | agi : {} | acc : {} | def : {} | hp : {} | amount : {}x".format(i+1,item[i][0],item[i][1],item[i][2],item[i][3],item[i][4],item[i][5],item[i][6],item[i][9]))
        print("|_____________________________________________________________________________________________________|")
    print("What to buy : ")
    w=msvcrt.getch()
    w=chr(w[0])
    if(w=='\r'):
        w="h"
    if(w=="e"):
        print("Are you sure? (y/n)")
        yn=msvcrt.getch()
        yn=chr(yn[0])
        if(yn=='y'):
            os.system("cls")
        else:
            shop(shopname,item,Gold,state)
    elif(w=="" or w.isalpha()):
        shop(shopname,item,Gold,state)
    else:
        for i in range(0,len(item)):
            if(int(w)-1==i):
                if(state==0):
                    print("No more qouta. You can't buy anymore (Press ANY to continue)")
                    msvcrt.getch()
                elif(Gold>=item[i][1] and item[i][9]>0):
                    Gold-=item[i][1]
                    item[i][9]-=1
                    if(item[i][8]==1):
                        for j in item_list:
                           if(j[0]==now_weapon):
                                for k in range(1,7):
                                    stat[k]+=item[i][k+1]
                        now_weapon=item[i][0]
                    elif(item[i][8]==2):
                        for j in item_list:
                           if(j[0]==now_helmet):
                                for k in range(1,7):
                                    stat[k]+=item[i][k+1]
                        now_helmet=item[i][0]
                    elif(item[i][8]==3): 
                        for j in item_list:
                           if(j[0]==now_chestplate):
                                for k in range(1,7):
                                    stat[k]+=item[i][k+1]
                        now_chestplate=item[i][0]
                    elif(item[i][8]==4): 
                        for j in item_list:
                           if(j[0]==now_leggings):
                                for k in range(1,7):
                                    stat[k]+=item[i][k+1]
                        now_leggings=item[i][0]
                    elif(item[i][8]==5): 
                        for j in item_list:
                           if(j[0]==now_boots):
                                for k in range(1,7):
                                    stat[k]+=item[i][k+1]
                        now_boots=item[i][0]
                    elif(item[i][8]==6): 
                        h_potion+=1
                    elif(item[i][8]==7): 
                        m_potion+=1
                    elif(item[i][8]==8): 
                        skill.append(item[i][0])
                        
                    print("You bought {} (Press ANY to continue)".format(item[i][0]))
                    msvcrt.getch()
                    state-=1
                elif(Gold>=item[i][1] and item[i][9]==0):
                    print("Out of stock. (Press ANY to continue)")
                    msvcrt.getch()
                elif(Gold<=item[i][1] and item[i][9]>0):
                    print("Not enough gold, make some money bruh. (Press ANY to continue)")
                    msvcrt.getch()
                else:
                    print("Out of stock and Not enough gold, get out of my shop bruh!")
                    msvcrt.getch()
                break
        hero=[[now_weapon],[now_helmet],[now_chestplate],[now_leggings],[now_boots],[health],[mana],[h_potion],[m_potion],[skill]]
        shop(shopname,item,Gold,state)
        
def pre_chapter1():
    global blackstart,Gold,hero
    os.system('cls')
    print('''
            ~         ~~          __           ^^
    ^^                 _T      .,,.    ~--~ ^^
                 ^^   // \                    ~
                      ][O]    ^^      ,-~ ~        ^^
                   /''-I_I         _II____
                __/_  /   \ ______/ ''   /'\_,__
                  | II--''\'' \,--:--..,_/,.-{ },
                ; '/__\,.--';|   |[] .-.| O{ _ }
                :' |  | []  -|   ''--:.;[,.'\,/
                '  |[]|,.--'' '',   ''-,.    |
                    ..    ..-''    ;       ''. '

    ''')
    print("Narrator : You enter the town")
    msvcrt.getch()
    print("Narrator : straight to the market and enter blacksmith")
    msvcrt.getch()
    print("Narrator : You have {} gold from your savings, buy some weapon".format(Gold))
    msvcrt.getch()
    shop('blacksmith',blackstart,Gold,1)
    print("Narraot : You got your first Weapon! Now let's check your status")
    msvcrt.getch()
    print("Press U to show status")
    s=msvcrt.getch()
    s=chr(s[0])
    while(s!="u"):
        s=msvcrt.getch()
        s=chr(s[0])
    showstat()

def showstat():
    os.system('cls')
    print('''
  .-.---------------------------------.-.
 ((o))              STATUS               )
  \\U/_______          _____         ____/
   |                                  |
   | Name       : {}
   | Level      : {}
   | Exp        : {}
   | 
   | Gold       : {}
   | MP Potion  : {}
   | HP Potion  : {}
   |                          
   | Weapon     : {}                               
   | Helmet     : {}             
   | Chestplate : {}                                 
   | Leggings   : {} 
   | Boots      : {}
   |
   | HP         : {}
   | MP         : {}                    
   | ATK        : {}
   | SPD        : {}
   | ACC        : {}
   | DEF        : {}
   |
   | Skill : {}                                 
   |                                  
   |____    _______    __  ____    ___|
  /A\\                                  \\
 ((o))     Press ANY to continue        )
  '-'----------------------------------'
'''.format(stat[0],Level,Exp,Gold,h_potion,m_potion,hero[0],hero[1],hero[2],hero[3],hero[4],stat[5],stat[6],stat[1],stat[2],stat[3],stat[4],skill))
    msvcrt.getch()

def chapter1():
    global chapter,posx,posy
    os.system('cls')
    print('''
.-"-._.-"-._.-.-"-._.-"-._.-.-"-._.-"-._.-.-"-.
.-"-._.-"-._.-.-"-._.-"-._.-.-"-._.-"-._.-.-"-.
 _____ _                 _              _____ 
/  __ \ |               | |            |_   _|
| /  \/ |__   __ _ _ __ | |_ ___ _ __    | |  
| |   | '_ \ / _` | '_ \| __/ _ \ '__|   | |  
| \__/\ | | | (_| | |_) | ||  __/ |     _| |_ 
 \____/_| |_|\__,_| .__/ \__\___|_|     \___/ 
                  | |                         
                  |_|                         
.-"-._.-"-._.-.-"-._.-"-._.-.-"-._.-"-._.-.-"-.
.-"-._.-"-._.-.-"-._.-"-._.-.-"-._.-"-._.-.-"-.
    ''')
    msvcrt.getch()
    os.system('cls')
    print('''
       ^  ^  ^   ^      ___I_      ^  ^   ^  ^  ^   ^  ^
      /|\/|\/|\ /|\    /\-_--\    /|\/|\ /|\/|\/|\ /|\/|\\
      /|\/|\/|\ /|\   /  \_-__\   /|\/|\ /|\/|\/|\ /|\/|\\
      /|\/|\/|\ /|\   |[]| [] |   /|\/|\ /|\/|\/|\ /|\/|\\
    ''')
    print("Narrator : You head to the outskirts of the town")
    msvcrt.getch()
    print("Narrator : You bring up the map and see...")
    msvcrt.getch()
    chapter+=1
    createmap(chapter)
    openmap()
    print("Narrator : the map give you information in your area")
    print('''
      H : Your position
      E : Exit
      T : Treasure chest
      S : shop
      ? : unknown area
      0 : explored area
    ----------------------
     WASD + Enter to move
    ----------------------
    ''')
    posx=0
    posy=0
    while(posx<chapter or posy<chapter):
        move=msvcrt.getch()
        move=chr(move[0])
        if(move=='u'):
            showstat()
            os.system('cls')
            openmap()
        else:
            mp[posx][posy]='0'
            if(move=='w' and posx>0):
                posx-=1
            elif(move=='a' and posy>0):
                posy-=1
            elif(move=='s' and posx<chapter):
                posx+=1
            elif(move=='d' and posy<chapter):
                posy+=1
            if(mp[posx][posy]=='T'):
                mp[posx][posy]='H'
                os.system('cls')
                openmap()
                print("You found treasure chest (Press Enter to open)")
                msvcrt.getch()
                treasure()
            elif(mp[posx][posy]=='S'):
                mp[posx][posy]='H'
                os.system('cls')
                openmap()
                print("You found shop (Press Enter to enter)")
                msvcrt.getch()
                create_shop()
                shop(random.choice(shop_list),newshop,Gold,random.randint(1,10))
                openmap()
            elif(mp[posx][posy]=='E'):
                mp[posx][posy]='H'
                os.system('cls')
                openmap()
                print("You found BOSS (Enter to start battle)")
                msvcrt.getch()
                boss_combat()
            elif(mp[posx][posy]!='0'):
                mp[posx][posy]='H'
                os.system('cls')
                openmap()
                rd=random.randint(1,100)
                if rd<70:
                    print("You found Monster (Enter to start battle)")
                    msvcrt.getch()
                    combat()

            else:
                mp[posx][posy]='H'
                os.system('cls')
                openmap()
    print("Narrator : Congrats! you complete chapter 1, you got the long way to go (Enter to continue)")
    msvcrt.getch()
    os.system('cls')

def endless_chapter():
    global chapter,posx,posy
    chapter+=1
    createmap(chapter)
    openmap()
    posx=0
    posy=0
    while(posx<chapter or posy<chapter):
        move=msvcrt.getch()
        move=chr(move[0])
        if(move=='u'):
            showstat()
            os.system('cls')
            openmap()
        else:
            mp[posx][posy]='0'
            if(move=='w' and posx>0):
                posx-=1
            elif(move=='a' and posy>0):
                posy-=1
            elif(move=='s' and posx<chapter):
                posx+=1
            elif(move=='d' and posy<chapter):
                posy+=1
            if(mp[posx][posy]=='T'):
                mp[posx][posy]='H'
                os.system('cls')
                openmap()
                print("You found treasure chest (Press ANY to open)")
                msvcrt.getch()
                treasure()
            elif(mp[posx][posy]=='S'):
                mp[posx][posy]='H'
                os.system('cls')
                openmap()
                print("You found shop (Press ANY to enter)")
                msvcrt.getch()
                for i in range (3,12):
                    create_shop()
                shop(random.choice(shop_list),newshop,Gold,random.randint(1,10))
                openmap()
            elif(mp[posx][posy]=='E'):
                mp[posx][posy]='H'
                os.system('cls')
                openmap()
                print("You found BOSS (Press ANY to start battle)")
                msvcrt.getch()
                boss_combat()
            elif(mp[posx][posy]!='0'):
                mp[posx][posy]='H'
                os.system('cls')
                openmap()
                rd=random.randint(1,100)
                if rd<70:
                    print("You found Monster! (Press ANY to start battle)")
                    msvcrt.getch()
                    combat()
            else:
                mp[posx][posy]='H'
                os.system('cls')
                openmap()

    print("Chapter {} complete! (Press ANY to continue)".format(chapter-1))
    msvcrt.getch()
    os.system('cls')

def treasure():
    global h_potion,m_potion,Gold
    os.system('cls')
    print(treasure_pic[0])
    print("Press ANY to Open")
    msvcrt.getch()
    tr=random.randint(0,50)
    Gold+=tr
    if(tr>0):
        print("{}x Gold".format(tr))
    msvcrt.getch()
    tr=random.randint(0,7)
    h_potion+=tr
    if(tr>0):
        print("{}x Health Potion".format(tr))
    msvcrt.getch()
    tr=random.randint(0,7)
    m_potion+=tr
    if(tr>0):
        print("{}x Mana Potion".format(tr))

def mon_init():
    global monster_list,boss_list
    monster_list = [  
        #name,atk,spd,acc,def,hp,mp  
        ['Mud Slime', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Slime Poison'],
        ['Baby Cyclop', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Cyclop Punch'],
        ['Sea Dragon', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Tidal Wave'],
        ['Grown Cyclop', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Cyclop Smash'],
        ['Hell Potatoe', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Potato Explosion'],
        ['Bunny Skull', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Carrot Strike'],
        ['Hell Squid', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Ink Spray'],
        ['Slender Slant', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Slant Strike'],
        ['Quarrel Squirrel', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Nut Shot'],
        ['Mental Moose', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Mind Crush'],
        ['Lone Wolf', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Bleed Bite'],
        ['Baby Dragon', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Fire Breath']
    ]

    boss_list = [   
        #name,atk,spd,acc,def,hp,mp  
        ['Chad Shrek', random.randint(10, 30), random.randint(10, 25), random.randint(10, 25), random.randint(10, 40), random.randint(40, 100),random.randint(0,100), 'Shrek Shack'],
        ['Minotaur', random.randint(10, 30), random.randint(10, 25), random.randint(10, 25), random.randint(10, 40), random.randint(40, 100),random.randint(0,100), 'Minor Strike'],
        ['Icecular', random.randint(10, 30), random.randint(10, 25), random.randint(10, 25), random.randint(10, 40), random.randint(40, 100),random.randint(0,100), 'Blood Lust'],
        ['Dragon Queen', random.randint(10, 30), random.randint(10, 25), random.randint(10, 25), random.randint(10, 40), random.randint(40, 100),random.randint(0,100), 'Dragon Breath']
    ]

def combat():
    global mon_stat,stat,turn,Gold,used,h_potion,m_potion,turn,posx,posy,Exp,Kill
    used=0
    os.system('cls')
    turn=1
    mon_init()
    mon=random.choice(monster_pic)
    mon_stat=monster_list[monster_pic.index(mon)]
    print(mon)
    print("Monster : {}".format(mon_stat[0]))
    msvcrt.getch()
    while(mon_stat[5]>0 and stat[5]>0):
        battle()
        if(stat[5]<=0):
            gameover()
        turn+=1
    if(mon_stat[5]!=-1000):
        Kill+=1
        Gold+=random.randint(10,50)
        Exp+=random.randint(40,70)
    os.system('cls')
    openmap()

def boss_combat():
    global mon_stat,stat,turn,Gold,used,h_potion,m_potion,turn,posx,posy,Exp,Kill
    used=0
    os.system('cls')
    turn=1
    mon_init()
    mon=random.choice(boss_pic)
    mon_stat=boss_list[boss_pic.index(mon)]
    print(mon)
    print("Boss : {}".format(mon_stat[0]))
    msvcrt.getch()
    while(mon_stat[5]>0 and stat[5]>0):
        battle()
        if(stat[5]<=0):
            gameover()
        turn+=1
    if(mon_stat[5]!=-1000):
        Kill+=1
        Gold+=random.randint(50,100)
        Exp+=random.randint(100,200)
    os.system('cls')
    openmap()

def battle():
    global mon_stat,stat,last_block,mon_last_block,used,h_potion,m_potion,turn,Damage
    os.system('cls')
    print('''
  _______________________________
 / Name : {}
|  HP : {}
|  MP : {}
|  Attack : {}
|  Defense : {}
|  Speed : {}
|  Accuracy : {}
 \_______________________________
             _    _______
            | |  / / ___/
            | | / /\__ \ 
            | |/ /___/ / 
            |___//____/  
   ______________________________
 / Name : {}
|  HP : {}
|  MP : {}
|  Attack : {}
|  Defense : {}
|  Speed : {}
|  Accuracy : {}
 \_______________________________
    '''.format(stat[0],stat[5],stat[6],stat[1],stat[4],stat[2],stat[3],mon_stat[0],mon_stat[5],mon_stat[6],mon_stat[1],mon_stat[4],mon_stat[2],mon_stat[3]))
    if(stat[2]>=mon_stat[2]):
        print("Turn {} : ".format(turn),end="")
        if(turn%2==1):
            print("{}'s turn".format(stat[0]))
            print('''(A)ttack
(B)lock
(S)kill
(P)otion
(E)scape''')
            a=msvcrt.getch()
            a=chr(a[0])
            if(a=='a'):
                r=random.randint(1,25)
                if(stat[3]>=r):
                    print("Attack Success!")
                    mon_stat[5]-=max(0,(stat[1]-mon_stat[4]))
                    Damage+=max(0,(stat[1]-mon_stat[4]))
                    mon_stat[4]-=stat[1]//2
                    mon_stat[4]=max(mon_stat[4],0)
                else:
                    print("Attack Failed!")
                    mon_stat[4]-=stat[1]//2
                    mon_stat[4]=max(mon_stat[4],0)
            elif(a=='b'):
                r=random.randint(1,30)
                if(stat[3]>=r):
                    print("Block Success!")
                    last_block=stat[1]
                    stat[4]+=stat[1]
                else:
                    print("Block Failed!")
            elif(a=='s'):
                if(len(skill)==0):
                    print("You do not have any skill")
                    msvcrt.getch()
                    turn-=1
                    return
                else:  
                    if(used==0):
                        for i in skill:
                            j=1
                            print("({}) {}".format(j,i))
                            j+=1
                        s=msvcrt.getch()
                        s=chr(s[0])
                        if(s.isnumeric()):
                            for i in range(0,len(skill)):
                                if(i+1==int(s)):
                                    if(stat[6]>=20):
                                        print("Using {}".format(skill[i]))
                                        stat[6]-=20
                                        stat[1]+=1
                                        stat[5]+=10
                                        stat[4]+=10
                                    else:
                                        print("You have not enough mana")
                                        msvcrt.getch()
                                        turn-=1
                                        return
                            used=0
                        else:
                            turn-=1
                            return
                    else:
                        print("You already used this skill")
                        msvcrt.getch()
                        turn-=1
                        return
            elif(a=='p'):
                print("(1) Health Potion  left : {}x".format(h_potion))
                print("(2) Mana Potion    left : {}x".format(m_potion))
                s=msvcrt.getch()
                s=chr(s[0])
                if(s=='1'):
                    if(h_potion>0):
                        print("Health Potion used!")
                        stat[5]+=20
                        h_potion-=1
                    else:
                        print("You have no Health Potion!")
                        msvcrt.getch()
                        turn-=1
                        return
                elif(s=='2'):
                    if(m_potion>0):
                        print("Mana Potion used!")
                        stat[6]+=20
                        m_potion-=1
                    else:
                        print("You have no Mana Potion!")
                        msvcrt.getch()
                        turn-=1
                        return
                else:
                    turn-=1
                    return
            elif(a=='e'):
                print("Are you sure?(y/n)")
                e=msvcrt.getch()
                e=chr(e[0])
                if(e=='y'):
                    stat[5]-=mon_stat[1]
                    mon_stat[5]=-1000
                else:
                    turn-=1
                    return
            else:
                print("Sleep")
                stat[6]+=5
        elif(turn%2==0):
            print("{}'s turn".format(mon_stat[0]))
            msvcrt.getch()
            a=random.randint(1,3)
            if(a==1):
                r=random.randint(1,20)
                if(mon_stat[3]>=r):
                    print("Attack Success!")
                    stat[5]-=max(0,(mon_stat[1]-stat[4]))
                    Damage+=max(0,(stat[1]-mon_stat[4]))
                    stat[4]-=mon_stat[1]//2
                    stat[4]=max(stat[4],0)
                else:
                    print("Attack Failed!")
                    stat[4]-=mon_stat[1]//2
                    stat[4]=max(stat[4],0)
            elif(a==2):
                r=random.randint(1,35)
                if(stat[3]>=r):
                    print("Block Success!")
                    mon_last_block=mon_stat[1]
                    mon_stat[4]+=mon_stat[1]//2
                else:
                    print("Block Failed!")
            elif(a==3):
                if(mon_stat[6]<15):
                    print("Sleep")
                    stat[6]+=5
                else:
                    print("using {}".format(mon_stat[7]))
                    mon_stat[6]=max(0,mon_stat[6]-15)
                    mon_stat[5]+=random.randint(0,5)
                    mon_stat[4]+=random.randint(0,5)
                    mon_stat[1]+=random.randint(0,5)
                    stat[5]-=mon_stat[1]//3
    else:
        print("Turn {} : ".format(turn),end="")
        if(turn%2==0):
            print("{}'s turn".format(stat[0]))
            print('''(A)ttack
(B)lock
(S)kill
(P)otion
(E)scape''')
            a=msvcrt.getch()
            a=chr(a[0])
            if(a=='a'):
                r=random.randint(1,25)
                if(stat[3]>=r):
                    print("Attack Success!")
                    mon_stat[5]-=max(0,(stat[1]-mon_stat[4]))
                    mon_stat[4]-=stat[1]//2
                    mon_stat[4]=max(mon_stat[4],0)
                else:
                    print("Attack Failed!")
                    mon_stat[4]-=stat[1]//2
                    mon_stat[4]=max(mon_stat[4],0)
            elif(a=='b'):
                r=random.randint(1,30)
                if(stat[3]>=r):
                    print("Block Success!")
                    last_block=stat[1]
                    stat[4]+=stat[1]
                else:
                    print("Block Failed!")
            elif(a=='s'):
                if(len(skill)==0):
                    print("You do not have any skill")
                    msvcrt.getch()
                    turn-=1
                    return
                else:  
                    if(used==0):
                        for i in skill:
                            j=1
                            print("({}) {}".format(j,i))
                            j+=1
                        s=msvcrt.getch()
                        s=chr(s[0])
                        if(s.isnumeric()):
                            for i in range(0,len(skill)):
                                if(i+1==int(s)):
                                    if(stat[6]>=20):
                                        print("Using {}".format(skill[i]))
                                        stat[6]-=20
                                        stat[1]+=1
                                        stat[5]+=10
                                        stat[4]+=10
                                    else:
                                        print("You have not enough mana")
                                        msvcrt.getch()
                                        turn-=1
                                        return
                            used=0
                        else:
                            turn-=1
                            return
                    else:
                        print("You already used this skill")
                        msvcrt.getch()
                        turn-=1
                        return
            elif(a=='p'):
                print("(1) Health Potion  left : {}x".format(h_potion))
                print("(2) Mana Potion    left : {}x".format(m_potion))
                s=msvcrt.getch()
                s=chr(s[0])
                if(s=='1'):
                    if(h_potion>0):
                        print("Health Potion used!")
                        stat[5]+=20
                        h_potion-=1
                    else:
                        print("You have no Health Potion!")
                        msvcrt.getch()
                        turn-=1
                        return
                elif(s=='2'):
                    if(m_potion>0):
                        print("Mana Potion used!")
                        stat[6]+=20
                        m_potion-=1
                    else:
                        print("You have no Mana Potion!")
                        msvcrt.getch()
                        turn-=1
                        return
                else:
                    turn-=1
                    return
            elif(a=='e'):
                print("Are you sure?(y/n)")
                e=msvcrt.getch()
                e=chr(e[0])
                if(e=='y'):
                    stat[5]-=mon_stat[1]
                    mon_stat[5]=-1000
                else:
                    turn-=1
                    return
            else:
                print("Sleep")
                stat[6]+=5
        elif(turn%2==1):
            print("{}'s turn".format(mon_stat[0]))
            msvcrt.getch()
            a=random.randint(1,3)
            if(a==1):
                r=random.randint(1,20)
                if(mon_stat[3]>=r):
                    print("Attack Success!")
                    stat[5]-=max(0,(mon_stat[1]-stat[4]))
                    stat[4]-=mon_stat[1]//2
                    stat[4]=max(stat[4],0)
                else:
                    print("Attack Failed!")
                    stat[4]-=mon_stat[1]//2
                    stat[4]=max(stat[4],0)
            elif(a==2):
                r=random.randint(1,35)
                if(stat[3]>=r):
                    print("Block Success!")
                    mon_last_block=mon_stat[1]
                    mon_stat[4]+=mon_stat[1]//2
                else:
                    print("Block Failed!")
            elif(a==3):
                if(mon_stat[6]<15):
                    print("Sleep")
                    stat[6]+=5
                else:
                    print("using {}".format(mon_stat[7]))
                    mon_stat[6]=max(0,mon_stat[6]-15)
                    mon_stat[5]+=random.randint(0,5)
                    mon_stat[4]+=random.randint(0,5)
                    mon_stat[1]+=random.randint(0,5)
                    stat[5]-=mon_stat[1]//3
    print("Turn End (Press ANY to continue)")
    msvcrt.getch()

def createmap(chapter):
    global mp,scene_mp,scenename_mp
    scene_mp=[[random.choice(scene_pic) for j in range(100)] for i in range(100)]
    scenename_mp=[[random.choice(scene_list) for j in range(100)] for i in range(100)]
    for i in range(0,chapter+1):
        for j in range(0,chapter+1):
            mp[i][j]="?"
    mp[0][0]="H"
    scene_mp[0][0]=HE_pic[0]
    scenename_mp[0][0]="Hero Camp"
    mp[chapter][chapter]="E"
    scene_mp[chapter][chapter]=HE_pic[1]
    scenename_mp[chapter][chapter]="Icecula's Castle"
    x=random.randint(0,chapter+1)
    y=random.randint(0,chapter+1)
    while(mp[x][y]!="?"):
        x=random.randint(0,chapter+1)
        y=random.randint(0,chapter+1)
    mp[x][y]="T"
    while(mp[x][y]!="?"):
        x=random.randint(0,chapter+1)
        y=random.randint(0,chapter+1)
    mp[x][y]="S"
    scene_mp[x][y]=random.choice(shop_pic)

def openmap():
    global mp,stat,chapter,scenename_mp,scene_mp,posx,posy,Level,Exp,max_atk,max_hp,max_mp,max_def,max_acc,max_spd
    print(scene_mp[posx][posy])
    up=Exp//100
    Exp=Exp%100
    Level+=up
    if(up>0):
        print("Level Up! {}x".format(up))
        ru=random.randint(3,7)
        stat[1]+=ru*up
        print("atk +{}".format(ru*up))
        ru=random.randint(1,3)
        stat[2]+=ru*up
        print("spd +{}".format(ru*up))
        ru=random.randint(1,3)
        stat[3]+=ru*up
        print("acc +{}".format(ru*up))
        ru=random.randint(5,15)
        stat[4]+=ru*up
        print("acc +{}".format(ru*up))
        ru=random.randint(5,15)
        stat[5]+=ru*up
        print("acc +{}".format(ru*up))
        ru=random.randint(5,15)
        stat[6]+=ru*up
        print("acc +{}".format(ru*up))
    print(scenename_mp[posx][posy])
    max_atk=max(max_atk,stat[1])
    max_hp=max(max_hp,stat[5])
    max_mp=max(max_mp,stat[6])
    max_def=max(max_def,stat[4])
    max_acc=max(max_acc,stat[3])
    max_spd=max(max_spd,stat[2])
    print('''
--------------------------------------------------------
 Chapter {} : Level : {} HP : {} MP : {} Gold : {}
--------------------------------------------------------'''.format(chapter-1,Level,stat[5],stat[6],Gold))
    print("*"*(chapter+3))
    for i in range(0,chapter+1):
        print("*",end="")
        for j in range(0,chapter+1):
            print(mp[i][j],end="")
        print("*")
    print("*"*(chapter+3))

def victory():
    global o_score
    os.system('cls')
    o_score=1000
    print('''
            ___________________________________________________________
___________|     __     __  _          _                               |__________
\          |     \ \   / / (_)   ___  | |_    ___    _ __   _   _      |         /
 \         |      \ \ / /  | |  / __| | __|  / _ \  | '__| | | | |     |        /
  \        |       \ V /   | | | (__  | |_  | (_) | | |    | |_| |     |       /
   \       |        \_/    |_|  \___|  \__|  \___/  |_|     \__, |     |      /
   /       |                                                |___/      |      \ 
  /        |   ≫ ──── ≪•◦ ❈ ◦•≫ ──── ≪≫ ──── ≪•◦ ❈ ◦•≫ ──── ≪    |       \ 
 /         |___________________________________________________________|        \ 
/_____________)                                                    (_____________\ ''')
    msvcrt.getch()
    print('''
                                                               o .,<>., o
                                                               |\/\/\/\/|
                                                               '========'
                                                               (_ SSSSSSs
                                                               )a'`SSSSSs
                                                              /_   SSSSSS
                                                              .=## SSSSS
                                                              .####  SSSSs
                                                              ###::::SSSSS
                                                             .;:::""""SSS
                                                            .:;:'  . .  \\\ 
                                                           .::/  '     .'|
                                                          .::( .         |
                                                          :::)           \ 
                                                          /\(            /
                                                         /)            ( |
                                                       .'  \  .       ./ /
                                                    _-'    |\  .        |
                                  _..--..   .  /"---\      | ` |      . |
          -=====================,' _     \=(*#(7.#####()   |  `/_..   , (
                      _.-''``';'-''-) ,.  \ '  '+/// |   .'/   \  ``-.) \ 
                    ,'  _.-  ((    `-'  `._\    `` \_/_.'  )    /`-._  ) |
                  ,'\ ,'  _.'.`:-.    \.-'                 /   <_L   )"  |
                _/   `._,' ,')`;  `-'`'                    |     L  /    /
               / `.   ,' ,|_/ / \                          (    <_-'     \ 
               \ / `./  '  / /,' \                        /|`         `. |
               )\   /`._   ,'`._.-\                       |)            \\' 
              /  `.'    )-'.-,' )__)                      |\            `|
             : /`. `.._(--.`':`':/ \                      ) \             \ 
             |::::\     ,'/::;-))  /                      ( )`.            |
             ||:::::  . .::':  :`-(                       |/    .          |
             ||::::|  . :|  |==[]=:                       .        -       \ 
             |||:::|  : ||  :  |  |                      /\           `     |
 ___ ___     '|;:::|  | |'   \=[]=|                     /  \                \ 
|   /_  ||``|||:::::  | ;    | |  |                     \_.'\_               `-.
:   \_``[]--[]|::::'\_;'     )-'..`._                 .-'\``:: ` .              \ 
 \___.>`''-.||:.__,'         |_______`>              <_____:::.         . . \  _/
                                                           `+a:f:......jr--\'''
    ''')
    print("Narrator : You defeated Icecula and vampire army...")
    msvcrt.getch()
    print("{} : is this the end?".format(stat[0]))
    msvcrt.getch()
    print("Narrator : Every ending is the begining of something new...")
    msvcrt.getch()
    print("Narrator : The old king witness your victory and give you the crown...")
    msvcrt.getch()
    print("Narrator : Now you are the king of CODETOPIA")
    print("Press ANY to continue")
    msvcrt.getch()
    showgamestat()

def gameover():
    global o_score
    os.system('cls')
    o_score=0
    print('''
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⡀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣤⠀⠀⠀⢀⣴⣿⡶⠀⣾⣿⣿⡿⠟⠛⠁
⠀⠀⠀⠀⠀⠀⣀⣀⣄⣀⠀⠀⠀⠀⣶⣶⣦⠀⠀⠀⠀⣼⣿⣿⡇⠀⣠⣿⣿⣿⠇⣸⣿⣿⣧⣤⠀⠀⠀
⠀⠀⢀⣴⣾⣿⡿⠿⠿⠿⠇⠀⠀⣸⣿⣿⣿⡆⠀⠀⢰⣿⣿⣿⣷⣼⣿⣿⣿⡿⢀⣿⣿⡿⠟⠛⠁⠀⠀
⠀⣴⣿⡿⠋⠁⠀⠀⠀⠀⠀⠀⢠⣿⣿⣹⣿⣿⣿⣿⣿⣿⡏⢻⣿⣿⢿⣿⣿⠃⣼⣿⣯⣤⣴⣶⣿⡤⠀
⣼⣿⠏⠀⣀⣠⣤⣶⣾⣷⠄⣰⣿⣿⡿⠿⠻⣿⣯⣸⣿⡿⠀⠀⠀⠁⣾⣿⡏⢠⣿⣿⠿⠛⠋⠉⠀⠀⠀
⣿⣿⠲⢿⣿⣿⣿⣿⡿⠋⢰⣿⣿⠋⠀⠀⠀⢻⣿⣿⣿⠇⠀⠀⠀⠀⠙⠛⠀⠀⠉⠁⠀⠀⠀⠀⠀⠀⠀
⠹⢿⣷⣶⣿⣿⠿⠋⠀⠀⠈⠙⠃⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠈⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣤⣴⣶⣦⣤⡀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡀⠀⠀⠀⠀⠀⠀⠀⣠⡇⢰⣶⣶⣾⡿⠷⣿⣿⣿⡟⠛⣉⣿⣿⣿⠆
⠀⠀⠀⠀⠀⠀⢀⣤⣶⣿⣿⡎⣿⣿⣦⠀⠀⠀⢀⣤⣾⠟⢀⣿⣿⡟⣁⠀⠀⣸⣿⣿⣤⣾⣿⡿⠛⠁⠀
⠀⠀⠀⠀⣠⣾⣿⡿⠛⠉⢿⣦⠘⣿⣿⡆⠀⢠⣾⣿⠋⠀⣼⣿⣿⣿⠿⠷⢠⣿⣿⣿⠿⢻⣿⣧⠀⠀⠀
⠀⠀⠀⣴⣿⣿⠋⠀⠀⠀⢸⣿⣇⢹⣿⣷⣰⣿⣿⠃⠀⢠⣿⣿⢃⣀⣤⣤⣾⣿⡟⠀⠀⠀⢻⣿⣆⠀⠀
⠀⠀⠀⣿⣿⡇⠀⠀⢀⣴⣿⣿⡟⠀⣿⣿⣿⣿⠃⠀⠀⣾⣿⣿⡿⠿⠛⢛⣿⡟⠀⠀⠀⠀⠀⠻⠿⠀⠀
⠀⠀⠀⠹⣿⣿⣶⣾⣿⣿⣿⠟⠁⠀⠸⢿⣿⠇⠀⠀⠀⠛⠛⠁⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠈⠙⠛⠛⠛⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ''')
    msvcrt.getch()
    print('''
                      _____  _____       
                     <     `/     |            
                      >          (               
                     |   _     _  |           
                     |  |_) | |_) |         
                     |  | \ | |   |             
                     |            |            
      ______.______%_|            |__________  _____           
    _/                                       \|     |        
   |                     {}                                 
   |_____.-._________              ____/|___________|       
                     | * Our Hero |                 
                     | + 476 CE   |                  
                     |            |               
                     |            |              
                     |   _        <              
                     |__/         |            
                      / `--.      |            
                    %|            |%       
                |/.%%|          -< @%%%         
                `\%`@|     v      |@@%@%%              
                .%%%@@@|%    |    % @@@%%@%%%%        
        _.%%%%%%@@@@@@%%_/%\_%@@%%@@@@@@@%%%%%%         
    '''.format(stat[0]))
    msvcrt.getch()
    print("Narrator : Unfortunately our hero gone...")
    msvcrt.getch()
    print("Narrator : Our empire is hopeless...")
    msvcrt.getch()
    print("Narrator : Forever...")
    print("Press ANY to continue")
    msvcrt.getch()
    showgamestat()

def showgamestat():
    global o_score,High_Score
    o_score += Level*10+Kill*10+Damage+max_atk+max_mp+max_def+max_acc+max_spd
    High_Score=max(o_score,High_Score)
    os.system('cls')
    print('''
-------------------------------------------
 |      OVERALL STATS OF : {}
------------------------------------------'''.format(stat[0]))
    msvcrt.getch()
    print(' |   Level        : {}'.format(Level))
    msvcrt.getch()
    print(' |   Kill         : {}'.format(Kill))
    msvcrt.getch()
    print(' |   Damage Dealt : {}'.format(Damage))
    msvcrt.getch()
    print(' |   Highest ATK  : {}'.format(max_atk))
    msvcrt.getch()
    print(' |   Highest HP   : {}'.format(max_hp))
    msvcrt.getch()
    print(' |   Highest MP   : {}'.format(max_mp))
    msvcrt.getch()
    print(' |   Highest DEF  : {}'.format(max_def))
    msvcrt.getch()
    print(' |   Highest ACC  : {}'.format(max_acc))
    msvcrt.getch()
    print(' |   Highest SPD  : {}'.format(max_spd))
    msvcrt.getch()
    print('''-------------------------------------------
 |   OVERALL SCORE : {}
-------------------------------------------'''.format(o_score))
    msvcrt.getch()
    print(''' |   Thanks for Playing   (M)ain Menu
-------------------------------------------
    ''')
    a=msvcrt.getch()
    a=chr(a[0])
    while(a!='m'):
        a=msvcrt.getch()
        a=chr(a[0])
    reset()
    mainmenu()
    
def reset():
    global Diff,Life,Angel,Name,item_list,chapter,mp,max_chapter,newshop,monster_list,posx,posy,Exp,Level,Kill,Damage,max_atk,max_hp,max_mp,max_def,max_acc,max_spd,boss_list,scene_mp,scenename_mp,blackstart,Gold,SGold,hero,stat,o_score
    Diff= 'NORMAL '
    Life= '100    '
    Angel='On     '
    chapter=1
    max_chapter=5
    newshop=[]
    posx=0
    posy=0
    Exp=0
    Level=1
    Kill=0
    Damage=0
    max_atk=0
    max_hp=0
    max_mp=0
    max_def=0
    max_acc=0
    max_spd=0
    o_score=0

    #name,cost,atk,spd,acc,def,hp,mp,type,left
    ##100
    item_list=[
    #start set
    ['None',0,0,0,0,0,0,0,0,0],
    ['Old Great Sword ',5,10,3,7,0,0,0,1,random.randint(0,4)],
    ['Old Dagger      ',5,5,7,5,0,0,0,1,random.randint(0,4)],
    ['Old Bow         ',5,7,3,9,0,0,0,1,random.randint(0,4)],
    ['Old Sword&Shield',5,7,5,6,1,0,0,1,random.randint(0,4)],

    #tier_c_swordsman_set    
    ['Rusty Sword', 5, 10, 3, 7, 0, 0, 0, 1,random.randint(0,4)],
    ['Leather Helmet', 5, 0, 0, 0, 3, 10, 0, 2,random.randint(0,4)],
    ['Leather Chest Plate', 10, 0, 0, 0, 7, 20, 0, 3,random.randint(0,4)],
    ['Leather Leggings', 7, 0, 0, 0, 5, 15, 0, 4,random.randint(0,4)],
    ['Leather Boots', 5, 0, 0, 0, 3, 10, 0, 5,random.randint(0,4)],

    #tier_b_swordsman_set   
    ['Iron Sword', 10, 12, 4, 8, 0, 0, 0, 1,random.randint(0,4)],
    ['Iron Helmet', 10, 0, 0, 0, 5, 10, 0, 2,random.randint(0,4)],
    ['Iron Chest Plate', 20, 0, 0, 0, 10, 20, 0, 3,random.randint(0,4)],
    ['Iron Leggings', 15, 0, 0, 0, 7, 15, 0, 4,random.randint(0,4)],
    ['Iron Boots', 10, 0, 0, 0, 5, 10, 0, 5,random.randint(0,4)],

    #tier_a_swordsman_set   
    ['Steel Sword', 20, 15, 5, 9, 0, 0, 0, 1,random.randint(0,4)],
    ['Steel Helmet', 20, 0, 0, 0, 8, 15, 0, 2,random.randint(0,4)],
    ['Steel Chest Plate', 40, 0, 0, 0, 15, 25, 0, 3,random.randint(0,4)],
    ['Steel Leggings', 25, 0, 0, 0, 12, 20, 0, 4,random.randint(0,4)],
    ['Steel Boots', 20, 0, 0, 0, 8, 15, 0, 5,random.randint(0,4)],

    #tier_s_swordsman_set   
    ['Diamond Sword', 50, 20, 6, 10, 0, 0, 0, 1,random.randint(0,4)],
    ['Diamond Helmet', 50, 0, 0, 0, 12, 20, 0, 2,random.randint(0,4)],
    ['Diamond Chest Plate', 100, 0, 0, 0, 20, 30, 0, 3,random.randint(0,4)],
    ['Diamond Leggings', 60, 0, 0, 0, 15, 25, 0, 4,random.randint(0,4)],
    ['Diamond Boots', 50, 0, 0, 0, 12, 20, 0, 5,random.randint(0,4)],

    #archer_set_c    
    ["Wooden Bow", 10, 5, 5, 7, 0, 0, 0, 1,random.randint(0,4)],
    ["Leather Cap", 5, 0, 0, 0, 2, 5, 0, 2,random.randint(0,4)],
    ["Leather Vest", 5, 0, 0, 0, 5, 10, 0, 3,random.randint(0,4)],
    ["Leather Pants", 5, 0, 0, 0, 3, 7, 0, 4,random.randint(0,4)],
    ["Leather Boots", 5, 0, 0, 0, 2, 5, 0, 5,random.randint(0,4)],

    #archer_set_b  
    ["Iron Bow", 25, 8, 7, 9, 0, 0, 0, 1,random.randint(0,4)],
    ["Iron Helmet", 15, 0, 0, 0, 5, 10, 0, 2,random.randint(0,4)],
    ["Iron Chestplate", 20, 0, 0, 0, 12, 25, 0, 3,random.randint(0,4)],
    ["Iron Leggings", 15, 0, 0, 0, 7, 15, 0, 4,random.randint(0,4)],
    ["Iron Boots", 10, 0, 0, 0, 5, 10, 0, 5,random.randint(0,4)],

    #archer_set_a  
    ["Diamond Bow", 75, 18, 10, 12, 0, 0, 0, 1,random.randint(0,4)],
    ["Diamond Helmet", 50, 0, 0, 0, 18, 35, 0, 2,random.randint(0,4)],
    ["Diamond Chestplate", 60, 0, 0, 0, 30, 50, 0, 3,random.randint(0,4)],
    ["Diamond Leggings", 50, 0, 0, 0, 22, 40, 0, 4,random.randint(0,4)],
    ["Diamond Boots", 40, 0, 0, 0, 18, 35, 0, 5,random.randint(0,4)],

    #archer_set_s  
    ["Golden Bow", 150, 25, 12, 15, 0, 0, 0, 1,random.randint(0,4)],
    ["Golden Helmet", 100, 0, 0, 0, 30, 60, 0, 2,random.randint(0,4)],
    ["Golden Chestplate", 120, 0, 0, 0, 50, 80, 0, 3,random.randint(0,4)],
    ["Golden Leggings", 100, 0, 0, 0, 35, 70, 0, 4,random.randint(0,4)],
    ["Golden Boots", 80, 0, 0, 0, 30, 60, 0, 5,random.randint(0,4)],

    #tier_c_mage_set
    ['Old Wand', 3, 5, 10, 7, 0, 0, 3, 1,random.randint(0,4)],
    ['Cloth Hat', 5, 0, 0, 0, 3, 7, 5, 2,random.randint(0,4)],
    ['Cloth Robe', 7, 0, 0, 0, 5, 10, 7, 3,random.randint(0,4)],
    ['Cloth Leggings', 5, 0, 0, 0, 3, 7, 5, 4,random.randint(0,4)],
    ['Cloth Boots', 3, 0, 0, 0, 2, 5, 3, 5,random.randint(0,4)],

    #tier_b_mage_set 
    ['Apprentice Wand', 7, 10, 15, 10, 0, 0, 5, 1,random.randint(0,4)],
    ['Wizard Hat', 10, 0, 0, 0, 5, 10, 7, 2,random.randint(0,4)],
    ['Wizard Robe', 15, 0, 0, 0, 10, 15, 10, 3,random.randint(0,4)],
    ['Wizard Leggings', 10, 0, 0, 0, 7, 10, 7, 4,random.randint(0,4)],
    ['Wizard Boots', 7, 0, 0, 0, 5, 7, 5, 5,random.randint(0,4)],

    #tier_a_mage_set
    ['Enchanted Wand', 15, 15, 20, 12, 0, 0, 10, 1,random.randint(0,4)],
    ['Enchanted Hat', 20, 0, 0, 0, 10, 12, 10, 2,random.randint(0,4)],
    ['Enchanted Robe', 25, 0, 0, 0, 15, 20, 12, 3,random.randint(0,4)],
    ['Enchanted Leggings', 15, 0, 0, 0, 12, 15, 10, 4,random.randint(0,4)],
    ['Enchanted Boots', 12, 0, 0, 0, 10, 12, 7, 5,random.randint(0,4)],

    #tier_s_mage_set
    ['Crystal Wand', 25, 20, 25, 15, 0, 0, 15, 1,random.randint(0,4)],
    ['Crystal Hat', 30, 0, 0, 0, 15, 20, 12, 2,random.randint(0,4)],
    ['Crystal Robe', 40, 0, 0, 0, 20, 25, 15, 3,random.randint(0,4)],
    ['Crystal Leggings', 20, 0, 0, 0, 15, 20, 12, 4,random.randint(0,4)],
    ['Crystal Boots', 15, 0, 0, 0, 12, 15, 10, 5,random.randint(0,4)],

    #tier_c_knight_set
    ['Rusty Longsword', 5, 7, 0, 10, 0, 0, 0, 1,random.randint(0,4)],
    ['Leather Helmet', 5, 0, 3, 10, 0, 0, 0, 2,random.randint(0,4)],
    ['Leather Chest Plate', 10, 0, 7, 20, 0, 0, 0, 3,random.randint(0,4)],
    ['Leather Leggings', 7, 0, 5, 15, 0, 0, 0, 4,random.randint(0,4)],
    ['Leather Boots', 5, 0, 3, 10, 0, 0, 0, 5,random.randint(0,4)],

    #tier_b_knight_set
    ['Iron Longsword', 10, 8, 0, 12, 0, 0, 0, 1,random.randint(0,4)],
    ['Iron Helmet', 10, 0, 5, 10, 0, 0, 0, 2,random.randint(0,4)],
    ['Iron Chest Plate', 20, 0, 10, 20, 0, 0, 0, 3,random.randint(0,4)],
    ['Iron Leggings', 15, 0, 7, 15, 0, 0, 0, 4,random.randint(0,4)],
    ['Iron Boots', 10, 0, 5, 10, 0, 0, 0, 5,random.randint(0,4)],

    #tier_a_knight_set
    ['Steel Longsword', 20, 10, 0, 15, 0, 0, 0, 1,random.randint(0,4)],
    ['Steel Helmet', 20, 0, 8, 15, 0, 0, 0, 2,random.randint(0,4)],
    ['Steel Chest Plate', 40, 0, 15, 25, 0, 0, 0, 3,random.randint(0,4)],
    ['Steel Leggings', 25, 0, 12, 20, 0, 0, 0, 4,random.randint(0,4)],
    ['Steel Boots', 20, 0, 8, 15, 0, 0, 0, 5,random.randint(0,4)],

    #tier_s_knight_set 
    ['Diamond Longsword', 50, 15, 0, 20, 0, 0, 0, 1,random.randint(0,4)],
    ['Diamond Helmet', 50, 0, 12, 20, 0, 0, 0, 2,random.randint(0,4)],
    ['Diamond Chest Plate', 100, 0, 20, 30, 0, 0, 0, 3,random.randint(0,4)],
    ['Diamond Leggings', 60, 0, 15, 25, 0, 0, 0, 4,random.randint(0,4)],
    ['Diamond Boots', 50, 0, 12, 20, 0, 0, 0, 5,random.randint(0,4)],

    #tier_c_thief_set
    ['Dagger', 5, 7, 10, 0, 0, 0, 5, 1,random.randint(0,4)],
    ['Leather Hood', 5, 0, 0, 5, 0, 10, 0, 2,random.randint(0,4)],
    ['Leather Vest', 10, 0, 0, 10, 0, 20, 0, 3,random.randint(0,4)],
    ['Leather Pants', 7, 0, 0, 7, 0, 15, 0, 4,random.randint(0,4)],
    ['Leather Boots', 5, 0, 0, 5, 0, 10, 0, 5,random.randint(0,4)],

    #tier_b_thief_set
    ['Short Sword', 10, 10, 12, 0, 0, 0, 7, 1,random.randint(0,4)],
    ['Chain Hood', 10, 0, 0, 8, 0, 15, 0, 2,random.randint(0,4)],
    ['Chain Vest', 20, 0, 0, 15, 0, 25, 0, 3,random.randint(0,4)],
    ['Chain Pants', 15, 0, 0, 10, 0, 20, 0, 4,random.randint(0,4)],
    ['Chain Boots', 10, 0, 0, 8, 0, 15, 0, 5,random.randint(0,4)],

    #tier_a_thief_set
    ['Rapier', 20, 12, 15, 0, 0, 0, 10, 1,random.randint(0,4)],
    ['Scale Hood', 20, 0, 0, 12, 0, 20, 0, 2,random.randint(0,4)],
    ['Scale Vest', 40, 0, 0, 25, 0, 35, 0, 3,random.randint(0,4)],
    ['Scale Pants', 25, 0, 0, 15, 0, 30, 0, 4,random.randint(0,4)],
    ['Scale Boots', 20, 0, 0, 12, 0, 20, 0, 5,random.randint(0,4)],

    #tier_s_thief_set
    ['Assassin Blade', 50, 15, 20, 0, 0, 0, 15, 1,random.randint(0,4)],
    ['Shadow Hood', 50, 0, 0, 20, 0, 30, 0, 2,random.randint(0,4)],
    ['Shadow Vest', 100, 0, 0, 40, 0, 50, 0, 3,random.randint(0,4)],
    ['Shadow Pants', 60, 0, 0, 25, 0, 40, 0, 4,random.randint(0,4)],
    ['Shadow Boots', 50, 0, 0, 20, 0, 30, 0, 5,random.randint(0,4)]

    ]
    #8
    monster_list = [  
    #name,atk,spd,acc,def,hp,mp  
    ['Mud Slime', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Slime Poison'],
    ['Baby Cyclop', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Cyclop Punch'],
    ['Sea Dragon', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Tidal Wave'],
    ['Grown Cyclop', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Cyclop Smash'],
    ['Hell Potatoe', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Potato Explosion'],
    ['Bunny Skull', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Carrot Strike'],
    ['Hell Squid', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Ink Spray'],
    ['Slender Slant', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Slant Strike'],
    ['Quarrel Squirrel', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Nut Shot'],
    ['Mental Moose', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Mind Crush'],
    ['Lone Wolf', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Bleed Bite'],
    ['Baby Dragon', random.randint(10, 30), random.randint(2, 20), random.randint(5, 20), random.randint(0, 10), random.randint(10, 60),random.randint(0,50), 'Fire Breath']
    ]

    boss_list = [  
        #name,atk,spd,acc,def,hp,mp  
        ['Chad Shrek', random.randint(10, 30), random.randint(10, 25), random.randint(10, 25), random.randint(10, 40), random.randint(40, 100),random.randint(0,100), 'Shrek Shack'],
        ['Minotaur', random.randint(10, 30), random.randint(10, 25), random.randint(10, 25), random.randint(10, 40), random.randint(40, 100),random.randint(0,100), 'Minor Strike'],
        ['Icecular', random.randint(10, 30), random.randint(10, 25), random.randint(10, 25), random.randint(10, 40), random.randint(40, 100),random.randint(0,100), 'Blood Lust'],
        ['Dragon Queen', random.randint(10, 30), random.randint(10, 25), random.randint(10, 25), random.randint(10, 40), random.randint(40, 100),random.randint(0,100), 'Dragon Breath']
    ]


    mp=[["x" for j in range(100)] for i in range(100)]
    scene_mp=[[random.choice(scene_pic) for j in range(100)] for i in range(100)]
    scenename_mp=[[random.choice(scene_list) for j in range(100)] for i in range(100)]
    blackstart=[item_list[1],item_list[2],item_list[3],item_list[4]]
    Gold=10
    SGold="10     "

    now_weapon="None"
    now_helmet="None"
    now_chestplate="None"
    now_leggings="None"
    now_boots="None"

    h_potion=5
    m_potion=5

    health=int(Life)
    mana=100
    skill=[]

    #weapon,helmet,chestplate,leggings,boots,health,mana,h_potion,m_potion,skill
    hero=[[now_weapon],[now_helmet],[now_chestplate],[now_leggings],[now_boots],[health],[mana],[h_potion],[m_potion],[skill]]
    #name,atk,spd,acc,def,hp,mp
    stat=["Name",10,10,10,10,health,mana,Angel]

#load
num=[x*5 for x in range(2000,2250)]
result=[]
for i,x in enumerate(num):
    result.append(math.factorial(x))
    progress_bar(i+1,len(num))
print("\nWelcome to CODETOPIA\n ---PRESS ANY---")
msvcrt.getch()

#game
def play():
    pre_chapter1()
    chapter1()
    for i in range(1,max_chapter):
        endless_chapter()
    victory()

mainmenu()